{"version":3,"sources":["../../src/middlewares/error.middleware.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport { logger } from '@utils/logger';\nimport { HttpException } from '@/exceptions/HttpException';\n\nexport const ErrorMiddleware = (error: HttpException, req: Request, res: Response, next: NextFunction) => {\n  try {\n    const status: number = error.status || 500;\n    const message: string = error.message || 'Something went wrong';\n\n    logger.error(`[${req.method}] ${req.path} >> StatusCode:: ${status}, Message:: ${message}`);\n\n    if (process.env.NODE_ENV === 'production') {\n      res.status(status).json({\n        message,\n      });\n    } else {\n      res.status(status).json({\n        message,\n        stack: error.stack,\n      });\n    }\n  } catch (error) {\n    next(error);\n  }\n};\n"],"names":["ErrorMiddleware","error","req","res","next","status","message","logger","method","path","process","env","NODE_ENV","json","stack"],"mappings":";;;;+BAIaA;;;eAAAA;;;wBAHU;AAGhB,MAAMA,kBAAkB,CAACC,OAAsBC,KAAcC,KAAeC;IACjF,IAAI;QACF,MAAMC,SAAiBJ,MAAMI,MAAM,IAAI;QACvC,MAAMC,UAAkBL,MAAMK,OAAO,IAAI;QAEzCC,cAAM,CAACN,KAAK,CAAC,CAAC,CAAC,EAAEC,IAAIM,MAAM,CAAC,EAAE,EAAEN,IAAIO,IAAI,CAAC,iBAAiB,EAAEJ,OAAO,YAAY,EAAEC,SAAS;QAE1F,IAAII,QAAQC,GAAG,CAACC,QAAQ,KAAK,cAAc;YACzCT,IAAIE,MAAM,CAACA,QAAQQ,IAAI,CAAC;gBACtBP;YACF;QACF,OAAO;YACLH,IAAIE,MAAM,CAACA,QAAQQ,IAAI,CAAC;gBACtBP;gBACAQ,OAAOb,MAAMa,KAAK;YACpB;QACF;IACF,EAAE,OAAOb,OAAO;QACdG,KAAKH;IACP;AACF"}