import { InvalidHTTPRequest, InvalidDataType, CannotFindTransaction, ContractDeploymentFailed, InvalidAbiItem, InvalidTransactionField, NotDelegatedTransaction, JSONRPCInvalidParams, InvalidSecp256k1PrivateKey, stringifyData, JSONRPCInternalError, JSONRPCServerError, JSONRPCMethodNotFound, VechainSDKError, PollExecution, ContractCallError } from '@vechain/sdk-errors';
import { Keccak256, Txt, MAINNET_NETWORK, TESTNET_NETWORK, SOLO_NETWORK, VET, Units, FixedPointNumber, VTHO, HexUInt, Revision, ABIContract, Clause, Transaction, Hex, Address, dataUtils, ThorId, ABI, Secp256k1, HDKey, HexInt, networkInfo, ABIEvent, ABIItem, ABIFunction, ZERO_ADDRESS, Quantity, ZERO_BYTES } from '@vechain/sdk-core';
import * as ar from '@noble/curves/abstract/utils';
import { Interface, ErrorFragment, TypedDataEncoder, JsonRpcApiProvider } from 'ethers';
import { EventEmitter } from 'events';
import { VeChainSDKLogger } from '@vechain/sdk-logging';

var Vr=Object.defineProperty;var Ur=(n,e)=>{for(var t in e)Vr(n,t,{get:e[t],enumerable:!0});};var Lr={};Ur(Lr,{AccountDetail:()=>K,AccountsModule:()=>q,BUILT_IN_CONTRACTS:()=>de,BlocksModule:()=>J,CHAIN_ID:()=>Pe,Contract:()=>v,ContractFactory:()=>L,ContractsModule:()=>Q,DebugModule:()=>z,DelegationHandler:()=>V,ERROR_SELECTOR:()=>ue,GasModule:()=>Y,HTTPS_REGEX:()=>Ie,HTTP_REGEX:()=>pe,HardhatVeChainProvider:()=>yn,HttpMethod:()=>C,JSONRPCEthersProvider:()=>Ue,LogsModule:()=>X,MAINNET_URL:()=>Wr,NODE_HEALTHCHECK_TOLERANCE_IN_SECONDS:()=>ve,NodesModule:()=>Z,PANIC_SELECTOR:()=>me,POLLING_INTERVAL:()=>Fe,Poll:()=>x,ProviderInternalBaseWallet:()=>ie,ProviderInternalHDWallet:()=>Ve,RPCMethodsMap:()=>fn,RPC_DOCUMENTATION_URL:()=>l,RPC_METHODS:()=>B,SimpleHttpClient:()=>k,TESTNET_URL:()=>jr,THOR_SOLO_ACCOUNTS:()=>zr,THOR_SOLO_URL:()=>Qr,ThorClient:()=>te,TransactionsModule:()=>ee,VeChainAbstractSigner:()=>re,VeChainPrivateKeySigner:()=>oe,VeChainProvider:()=>H,blocksFormatter:()=>h,buildQuery:()=>y,debugFormatter:()=>se,debugGetBadBlocks:()=>qe,debugGetRawBlock:()=>Je,debugGetRawHeader:()=>We,debugGetRawReceipts:()=>je,debugGetRawTransaction:()=>Qe,debugTraceBlockByHash:()=>ze,debugTraceBlockByNumber:()=>Ye,debugTraceCall:()=>Xe,debugTraceTransaction:()=>M,engineExchangeCapabilities:()=>Ze,engineExchangeTransitionConfigurationV1:()=>et,engineForkchoiceUpdatedV1:()=>tt,engineForkchoiceUpdatedV2:()=>nt,engineForkchoiceUpdatedV3:()=>rt,engineGetPayloadBodiesByHashV1:()=>ot,engineGetPayloadBodiesByRangeV1:()=>it,engineGetPayloadV1:()=>at,engineGetPayloadV2:()=>st,engineGetPayloadV3:()=>ct,engineNewPayloadV1:()=>lt,engineNewPayloadV2:()=>dt,engineNewPayloadV3:()=>pt,ethAccounts:()=>ce,ethBlockNumber:()=>ut,ethCall:()=>mt,ethChainId:()=>m,ethCoinbase:()=>gt,ethCreateAccessList:()=>ft,ethEstimateGas:()=>ht,ethFeeHistory:()=>yt,ethGasPrice:()=>Tt,ethGetBalance:()=>bt,ethGetBlockByHash:()=>E,ethGetBlockByNumber:()=>g,ethGetBlockReceipts:()=>Pt,ethGetBlockTransactionCountByHash:()=>wt,ethGetBlockTransactionCountByNumber:()=>Ct,ethGetCode:()=>Et,ethGetFilterChanges:()=>xt,ethGetFilterLogs:()=>It,ethGetLogs:()=>le,ethGetProof:()=>vt,ethGetStorageAt:()=>Rt,ethGetTransactionByBlockHashAndIndex:()=>kt,ethGetTransactionByBlockNumberAndIndex:()=>Bt,ethGetTransactionByHash:()=>D,ethGetTransactionCount:()=>Nt,ethGetTransactionReceipt:()=>S,ethGetUncleByBlockHashAndIndex:()=>_t,ethGetUncleByBlockNumberAndIndex:()=>Ot,ethGetUncleCountByBlockHash:()=>At,ethGetUncleCountByBlockNumber:()=>St,ethGetWork:()=>Mt,ethHashrate:()=>Dt,ethMaxPriorityFeePerGas:()=>Lt,ethMining:()=>Vt,ethNewBlockFilter:()=>Ut,ethNewFilter:()=>Ft,ethNewPendingTransactionFilter:()=>Ht,ethProtocolVersion:()=>Gt,ethRequestAccounts:()=>Kt,ethSendRawTransaction:()=>$t,ethSendTransaction:()=>Jt,ethSign:()=>Wt,ethSignTransaction:()=>Qt,ethSignTypedDataV4:()=>zt,ethSubmitWork:()=>Yt,ethSubscribe:()=>Zt,ethSyncing:()=>en,ethUninstallFilter:()=>tn,ethUnsubscribe:()=>nn,evmMine:()=>rn,formatToLogsRPC:()=>Ke,formatToRPCStandard:()=>Ge,getCorrectBlockNumberRPCToVeChain:()=>f,getCriteriaSetForInput:()=>$e,getNumberOfLogsAheadOfTransactionIntoBlockExpanded:()=>He,getTransactionIndexIntoBlock:()=>R,netListening:()=>on,netPeerCount:()=>an,netVersion:()=>sn,parityNextNonce:()=>cn,sanitizeWebsocketBaseURL:()=>I,signerUtils:()=>xe,subscriptions:()=>ro,thorest:()=>p,toQueryString:()=>N,transactionsFormatter:()=>A,txPoolContent:()=>ln,txPoolContentFrom:()=>dn,txPoolInspect:()=>pn,txPoolStatus:()=>un,vnsUtils:()=>P,web3ClientVersion:()=>mn,web3Sha3:()=>gn});var C=(t=>(t.GET="GET",t.POST="POST",t))(C||{});var k=class n{static DEFAULT_TIMEOUT=3e4;baseURL;timeout;constructor(e,t=n.DEFAULT_TIMEOUT){this.baseURL=e,this.timeout=t;}async get(e,t){return await this.http("GET",e,t)}async http(e,t,r){let o=new AbortController,i=setTimeout(()=>{o.abort();},this.timeout);try{let a=new URL(t,this.baseURL);r?.query!=null&&Object.entries(r.query).forEach(([d,u])=>{a.searchParams.append(d,String(u));});let c=await fetch(a,{method:e,headers:r?.headers,body:e!=="GET"?JSON.stringify(r?.body):void 0,signal:o.signal});if(c.ok){let d=Object.fromEntries(c.headers.entries());return r?.validateResponseHeader!=null&&d!=null&&r.validateResponseHeader(d),await c.json()}throw new Error(`HTTP ${c.status} ${c.statusText}`,{cause:c})}catch(a){throw new InvalidHTTPRequest("HttpClient.http()",a.message,{method:e,url:`${this.baseURL}${t}`},a)}finally{clearTimeout(i);}}async post(e,t){return await this.http("POST",e,t)}};function Tn(n,e){return {from:e,chainTag:n.chainTag,blockRef:n.blockRef,expiration:n.expiration,clauses:n.clauses,gasPriceCoef:n.gasPriceCoef,gas:n.gas,dependsOn:n.dependsOn??void 0,nonce:n.nonce,reserved:n.reserved}}var xe={transactionBodyToTransactionRequestInput:Tn};var B=(s=>(s.eth_blockNumber="eth_blockNumber",s.eth_chainId="eth_chainId",s.eth_getBalance="eth_getBalance",s.eth_getCode="eth_getCode",s.eth_getStorageAt="eth_getStorageAt",s.eth_estimateGas="eth_estimateGas",s.eth_call="eth_call",s.eth_sendRawTransaction="eth_sendRawTransaction",s.eth_getLogs="eth_getLogs",s.eth_getBlockByHash="eth_getBlockByHash",s.eth_getBlockByNumber="eth_getBlockByNumber",s.eth_accounts="eth_accounts",s.eth_requestAccounts="eth_requestAccounts",s.eth_gasPrice="eth_gasPrice",s.eth_getTransactionByHash="eth_getTransactionByHash",s.eth_getTransactionCount="eth_getTransactionCount",s.eth_getTransactionReceipt="eth_getTransactionReceipt",s.eth_getTransactionByBlockNumberAndIndex="eth_getTransactionByBlockNumberAndIndex",s.eth_getTransactionByBlockHashAndIndex="eth_getTransactionByBlockHashAndIndex",s.eth_getBlockTransactionCountByHash="eth_getBlockTransactionCountByHash",s.eth_getBlockTransactionCountByNumber="eth_getBlockTransactionCountByNumber",s.eth_sendTransaction="eth_sendTransaction",s.eth_syncing="eth_syncing",s.net_version="net_version",s.web3_clientVersion="web3_clientVersion",s.eth_subscribe="eth_subscribe",s.eth_unsubscribe="eth_unsubscribe",s.debug_traceTransaction="debug_traceTransaction",s.debug_traceCall="debug_traceCall",s.evm_mine="evm_mine",s.web3_sha3="web3_sha3",s.net_peerCount="net_peerCount",s.net_listening="net_listening",s.eth_getUncleByBlockNumberAndIndex="eth_getUncleByBlockNumberAndIndex",s.eth_getUncleByBlockHashAndIndex="eth_getUncleByBlockHashAndIndex",s.txpool_inspect="txpool_inspect",s.txpool_contentFrom="txpool_contentFrom",s.txpool_content="txpool_content",s.txpool_status="txpool_status",s.eth_signTransaction="eth_signTransaction",s.debug_traceBlockByHash="debug_traceBlockByHash",s.debug_traceBlockByNumber="debug_traceBlockByNumber",s.eth_getUncleCountByBlockHash="eth_getUncleCountByBlockHash",s.eth_getUncleCountByBlockNumber="eth_getUncleCountByBlockNumber",s.eth_signTypedData_v4="eth_signTypedData_v4",s.eth_coinbase="eth_coinbase",s.eth_feeHistory="eth_feeHistory",s.eth_getWork="eth_getWork",s.eth_mining="eth_mining",s.eth_hashrate="eth_hashrate",s.eth_protocolVersion="eth_protocolVersion",s.eth_sign="eth_sign",s.eth_submitWork="eth_submitWork",s.parity_nextNonce="parity_nextNonce",s.eth_newFilter="eth_newFilter",s.eth_newBlockFilter="eth_newBlockFilter",s.eth_newPendingTransactionFilter="eth_newPendingTransactionFilter",s.eth_getFilterLogs="eth_getFilterLogs",s.eth_getFilterChanges="eth_getFilterChanges",s.eth_uninstallFilter="eth_uninstallFilter",s.debug_getBadBlocks="debug_getBadBlocks",s.debug_getRawBlock="debug_getRawBlock",s.debug_getRawHeader="debug_getRawHeader",s.debug_getRawReceipts="debug_getRawReceipts",s.debug_getRawTransaction="debug_getRawTransaction",s.engine_exchangeCapabilities="engine_exchangeCapabilities",s.engine_exchangeTransitionConfigurationV1="engine_exchangeTransitionConfigurationV1",s.engine_forkchoiceUpdatedV1="engine_forkchoiceUpdatedV1",s.engine_forkchoiceUpdatedV2="engine_forkchoiceUpdatedV2",s.engine_forkchoiceUpdatedV3="engine_forkchoiceUpdatedV3",s.engine_getPayloadBodiesByHashV1="engine_getPayloadBodiesByHashV1",s.engine_getPayloadBodiesByRangeV1="engine_getPayloadBodiesByRangeV1",s.engine_getPayloadV1="engine_getPayloadV1",s.engine_getPayloadV2="engine_getPayloadV2",s.engine_getPayloadV3="engine_getPayloadV3",s.engine_newPayloadV1="engine_newPayloadV1",s.engine_newPayloadV2="engine_newPayloadV2",s.engine_newPayloadV3="engine_newPayloadV3",s.eth_createAccessList="eth_createAccessList",s.eth_getBlockReceipts="eth_getBlockReceipts",s.eth_getProof="eth_getProof",s.eth_maxPriorityFeePerGas="eth_maxPriorityFeePerGas",s))(B||{});var K=class{balance;energy;hasCode;get vet(){return VET.of(Units.formatEther(FixedPointNumber.of(this.balance)))}get vtho(){return VTHO.of(Units.formatEther(FixedPointNumber.of(this.energy)))}constructor(e){this.balance=e.balance,this.energy=e.energy,this.hasCode=e.hasCode;}};var Kr="0x0000000000000000000000000000506172616d73",$r="0x0000000000000000000000000000456e65726779",qr=[{constant:!1,inputs:[{name:"_key",type:"bytes32"},{name:"_value",type:"uint256"}],name:"set",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_key",type:"bytes32"}],name:"get",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"executor",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{anonymous:!1,inputs:[{indexed:!0,name:"key",type:"bytes32"},{indexed:!1,name:"value",type:"uint256"}],name:"Set",type:"event"}],Jr=[{constant:!0,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"pure",type:"function"},{constant:!1,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"success",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_amount",type:"uint256"}],name:"transferFrom",outputs:[{name:"success",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],payable:!1,stateMutability:"pure",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"pure",type:"function"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_amount",type:"uint256"}],name:"transfer",outputs:[{name:"success",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_amount",type:"uint256"}],name:"move",outputs:[{name:"success",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"totalBurned",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"remaining",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{anonymous:!1,inputs:[{indexed:!0,name:"_from",type:"address"},{indexed:!0,name:"_to",type:"address"},{indexed:!1,name:"_value",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"_owner",type:"address"},{indexed:!0,name:"_spender",type:"address"},{indexed:!1,name:"_value",type:"uint256"}],name:"Approval",type:"event"}],de={PARAMS_ABI:qr,PARAMS_ADDRESS:Kr,ENERGY_ABI:Jr,ENERGY_ADDRESS:$r};var pe=/^http:\/\//,Ie=/^https:\/\//;var ve=30;var ue=Keccak256.of(Txt.of("Error(string)").bytes).toString().slice(0,10),me=Keccak256.of(Txt.of("Panic(uint256)").bytes).toString().slice(0,10);var Wr="https://mainnet.vechain.org",jr="https://testnet.vechain.org",Qr="http://localhost:8669";var l="https://ethereum.github.io/execution-apis/api-documentation/";var zr=[{privateKey:"7f9290cc44c5fd2b95fe21d6ad6fe5fa9c177e1cd6f3b4c96a97b13e09eaa158",address:"0x3db469a79593dcc67f07DE1869d6682fC1eaf535"},{privateKey:"ea5383ac1f9e625220039a4afac6a7f868bf1ad4f48ce3a1dd78bd214ee4ace5",address:"0x2669514f9fe96bc7301177ba774d3da8a06cace4"},{privateKey:"1758771c54938e977518e4ff1c297aca882f6598891df503030734532efa790e",address:"0x9e7911de289c3c856ce7f421034f66b6cde49c39"},{privateKey:"432f38bcf338c374523e83fdb2ebe1030aba63c7f1e81f7d76c5f53f4d42e766",address:"0x88b2551c3ed42ca663796c10ce68c88a65f73fe2"},{privateKey:"706e6acd567fdc22db54aead12cb39db01c4832f149f95299aa8dd8bef7d28ff",address:"0xf02f557c753edf5fcdcbfe4c1c3a448b3cc84d54"},{privateKey:"f9fc826b63a35413541d92d2bfb6661128cd5075fcdca583446d20c59994ba26",address:"0x7a28e7361fd10f4f058f9fefc77544349ecff5d6"},{privateKey:"0da72e8e26580d409d1837e23cc50c887358964152039e32af0c8a147c6b616d",address:"0xb717b660cd51109334bd10b2c168986055f58c1a"},{privateKey:"6e8ad4e4ffb888082d94975a58dc9a8179f8724ba22301cd8392ba5352af7e25",address:"0x62226ae029dabcf90f3cb66f091919d2687d5257"},{privateKey:"521b7793c6eb27d137b617627c6b85d57c0aa303380e9ca4e30a30302fbc6676",address:"0x062f167a905c1484de7e75b88edc7439f82117de"},{privateKey:"adc81265b0909dec70235ec973b1758e45ce5ce7cfe92eb96b79cd0ef07bc6bc",address:"0x3e3d79163b08502a086213cd09660721740443d7"},{privateKey:"99f0500549792796c14fed62011a51081dc5b5e68fe8bd8a13b86be829c4fd36",address:"0xf077b491b355e64048ce21e3a6fc4751eeea77fa"},{privateKey:"7b067f53d350f1cf20ec13df416b7b73e88a1dc7331bc904b92108b1e76a08b1",address:"0x435933c8064b4ae76be665428e0307ef2ccfbd68"},{privateKey:"f4a1a17039216f535d42ec23732c79943ffb45a089fbb78a14daad0dae93e991",address:"0x0f872421dc479f3c11edd89512731814d0598db5"},{privateKey:"35b5cc144faca7d7f220fca7ad3420090861d5231d80eb23e1013426847371c4",address:"0xf370940abdbd2583bc80bfc19d19bc216c88ccf0"},{privateKey:"10c851d8d6c6ed9e6f625742063f292f4cf57c2dbeea8099fa3aca53ef90aef1",address:"0x99602e4bbc0503b8ff4432bb1857f916c3653b85"},{privateKey:"2dd2c5b5d65913214783a6bd5679d8c6ef29ca9f2e2eae98b4add061d0b85ea0",address:"0x61e7d0c2b25706be3485980f39a3a994a8207acf"},{privateKey:"e1b72a1761ae189c10ec3783dd124b902ffd8c6b93cd9ff443d5490ce70047ff",address:"0x361277d1b27504f36a3b33d3a52d1f8270331b8c"},{privateKey:"35cbc5ac0c3a2de0eb4f230ced958fd6a6c19ed36b5d2b1803a9f11978f96072",address:"0xd7f75a0a1287ab2916848909c8531a0ea9412800"},{privateKey:"b639c258292096306d2f60bc1a8da9bc434ad37f15cd44ee9a2526685f592220",address:"0xabef6032b9176c186f6bf984f548bda53349f70a"},{privateKey:"9d68178cdc934178cca0a0051f40ed46be153cf23cb1805b59cc612c0ad2bbe0",address:"0x865306084235bf804c8bba8a8d56890940ca8f0b"}];var y=n=>{let e={};for(let t in n)n[t]!==void 0&&(e[t]=n[t]);return e};async function Xr(n){await new Promise(e=>setTimeout(e,n));}function En(n,e){if(e?.requestIntervalInMilliseconds!==void 0&&(e.requestIntervalInMilliseconds<=0||!Number.isInteger(e.requestIntervalInMilliseconds)))throw new InvalidDataType("SyncPoll()",'Polling failed: Invalid input for field "options?.requestIntervalInMilliseconds" it must be a positive number',{requestIntervalInMilliseconds:e.requestIntervalInMilliseconds});if(e?.maximumIterations!==void 0&&(e.maximumIterations<=0||!Number.isInteger(e.maximumIterations)))throw new InvalidDataType("SyncPoll()",'Polling failed: Invalid input for field "options?.maximumIterations" it must be a positive number',{maximumIterations:e.maximumIterations});if(e?.maximumWaitingTimeInMilliseconds!==void 0&&(e.maximumWaitingTimeInMilliseconds<=0||!Number.isInteger(e.maximumWaitingTimeInMilliseconds)))throw new InvalidDataType("SyncPoll()",'Polling failed: Invalid input for field "options?.maximumWaitingTimeInMilliseconds" it must be a positive number',{maximumWaitingTimeInMilliseconds:e.maximumWaitingTimeInMilliseconds});let t=0,r,o=!1,i=Date.now();return {waitUntil:async a=>{try{do{r=await n(),await Xr(e?.requestIntervalInMilliseconds!==void 0?e.requestIntervalInMilliseconds:1e3),t=t+1;let c=a(r),d=e?.maximumIterations!==void 0?t>=e.maximumIterations:!1,u=e?.maximumWaitingTimeInMilliseconds!==void 0&&Date.now()-i>=e.maximumWaitingTimeInMilliseconds;o=!(c||d||u);}while(o);return r}catch(c){throw new PollExecution("SyncPoll.waitUntil()","Polling failed: Function execution error encountered during synchronous polling.",{functionName:n.name},c)}}}}var ke=class extends EventEmitter{currentIteration=0;error;hasToStopOnError;intervalId;pollingFunction;requestIntervalInMilliseconds;constructor(e,t,r){if(super(),this.pollingFunction=e,this.hasToStopOnError=r,t!==void 0&&(t<=0||!Number.isInteger(t)))throw new InvalidDataType("SyncPoll()",'Polling failed: Invalid input for field "options?.maximumWaitingTimeInMilliseconds" it must be a positive number',{requestIntervalInMilliseconds:t});this.requestIntervalInMilliseconds=t;}get getCurrentIteration(){return this.currentIteration}async _intervalLoop(){try{let e=await this.pollingFunction();this.emit("data",{data:e,eventPoll:this});}catch(e){this.error=new PollExecution("EventPoll - main interval loop function",`Error during the execution of the poll ${e.message}`,{functionName:this.pollingFunction.name}),this.emit("error",{error:this.error}),this.hasToStopOnError&&this.stopListen();}this.currentIteration=this.currentIteration+1;}onData(e){return this.on("data",t=>{e(t.data,t.eventPoll);}),this}onError(e){return this.on("error",t=>{e(t.error);}),this}onStart(e){return this.on("start",t=>{e(t.eventPoll);}),this}onStop(e){return this.on("stop",t=>{e(t.eventPoll);}),this}startListen(){this.emit("start",{eventPoll:this}),this._intervalLoop().then(()=>{this.intervalId=setInterval(()=>{(async()=>await this._intervalLoop())();},this.requestIntervalInMilliseconds);});}stopListen(){clearInterval(this.intervalId),this.emit("stop",{eventPoll:this});}};function xn(n,e,t=!0){return new ke(n,e,t)}var x={SyncPoll:En,createEventPoll:xn};var N=n=>{let e=Object.entries(n).filter(([,t])=>t!==void 0).map(([t,r])=>`${encodeURIComponent(t)}=${encodeURIComponent(r)}`);return e.length>0?`?${e.join("&")}`:""},I=n=>{n=n.trim();let e=/^(https?:\/\/)([a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*)(:\d+)?\/?$/;if(!e.test(n))throw new InvalidDataType("sanitizeWebsocketBaseURL()",`Invalid url: ${n}. Must adhere to the regex: ${e}.`,{url:n,urlRegex:e});return n=n.replace(/\/$/,""),n=pe.exec(n)!==null?n.replace(pe,"ws://"):n.replace(Ie,"wss://"),n};var p={accounts:{get:{ACCOUNT_DETAIL:n=>`/accounts/${n}`,ACCOUNT_BYTECODE:n=>`/accounts/${n}/code`,STORAGE_AT:(n,e)=>`/accounts/${n}/storage/${e}`},post:{SIMULATE_TRANSACTION:n=>n!=null?`/accounts/*?revision=${n}`:"/accounts/*"}},blocks:{get:{BLOCK_DETAIL:n=>`/blocks/${n}`}},nodes:{get:{NODES:()=>"/node/network/peers"}},logs:{post:{EVENT_LOGS:()=>"/logs/event",TRANSFER_LOGS:()=>"/logs/transfer"}},transactions:{get:{TRANSACTION:n=>`/transactions/${n}`,TRANSACTION_RECEIPT:n=>`/transactions/${n}/receipt`},post:{TRANSACTION:()=>"/transactions"}},subscriptions:{get:{BLOCK:(n,e)=>{let t=N({pos:e});return `${I(n)}/subscriptions/block${t}`},EVENT:(n,e)=>{let t=N({pos:e?.position,addr:e?.contractAddress,t0:e?.topic0,t1:e?.topic1,t2:e?.topic2,t3:e?.topic3,t4:e?.topic4});return `${I(n)}/subscriptions/event${t}`},VET_TRANSFER:(n,e)=>{let t=N({pos:e?.position,txOrigin:e?.signerAddress,sender:e?.sender,recipient:e?.receiver});return `${I(n)}/subscriptions/transfer${t}`},BEAT_LEGACY:(n,e)=>{let t=N({pos:e});return `${I(n)}/subscriptions/beat${t}`},BEAT:(n,e)=>{let t=N({pos:e});return `${I(n)}/subscriptions/beat2${t}`},NEW_TRANSACTIONS:n=>`${I(n)}/subscriptions/txpool`}},debug:{post:{TRACE_TRANSACTION_CLAUSE:()=>"/debug/tracers",TRACE_CONTRACT_CALL:()=>"/debug/tracers/call",RETRIEVE_STORAGE_RANGE:()=>"/debug/storage-range"}}};var In=(n,e)=>p.subscriptions.get.BEAT_LEGACY(n,e?.blockID),vn=(n,e)=>p.subscriptions.get.BEAT(n,e?.blockID);var Rn=(n,e)=>p.subscriptions.get.BLOCK(n,e?.blockID);var Bn=(n,e,t,r)=>{let i=(typeof e=="string"?new ABIEvent(e):new ABIEvent(e)).encodeFilterTopicsNoNull(t??[]);return p.subscriptions.get.EVENT(n,{position:r?.blockID,contractAddress:r?.address,topic0:i[0],topic1:i[1],topic2:i[2],topic3:i[3],topic4:i[4]})};var Nn=n=>p.subscriptions.get.NEW_TRANSACTIONS(n);var _n=(n,e)=>p.subscriptions.get.VET_TRANSFER(n,{position:e?.blockID,signerAddress:e?.signerAddress,sender:e?.sender,receiver:e?.recipient});var ro={getEventSubscriptionUrl:Bn,getBlockSubscriptionUrl:Rn,getNewTransactionsSubscriptionUrl:Nn,getVETtransfersSubscriptionUrl:_n,getLegacyBeatSubscriptionUrl:In,getBeatSubscriptionUrl:vn};var $={[MAINNET_NETWORK.genesisBlock.id]:{registry:"0xa9231da8BF8D10e2df3f6E03Dd5449caD600129b",resolveUtils:"0xA11413086e163e41901bb81fdc5617c975Fa5a1A"},[TESTNET_NETWORK.genesisBlock.id]:{registry:"0xcBFB30c1F267914816668d53AcBA7bA7c9806D13",resolveUtils:"0xc403b8EA53F707d7d4de095f0A20bC491Cf2bc94"},[SOLO_NETWORK.genesisBlock.id]:{registry:"0x1c4a602ed21f3d1dddd1142c81f231ef1a08c921",resolveUtils:"0xb2f08bbfa8a42b1fbe63feec604cb147385203d7"}};var co=async(n,e)=>{let[t]=await P.resolveNames(n,[e]);return t??null},lo=async(n,e)=>{let t=await n.blocks.getGenesisBlock();if(t===null||!Address.isValid($[t.id]?.resolveUtils))return e.map(()=>null);let r=$[t.id].resolveUtils,o=await n.contracts.executeCall(r,ABIItem.ofSignature(ABIFunction,"function getAddresses(string[] names) returns (address[] addresses)"),[e]),[i]=o.result.array;return i.map(a=>a===ZERO_ADDRESS||!Address.isValid(a)?null:a)},po=async(n,e)=>{let[t]=await P.lookupAddresses(n,[e]);return t??null},uo=async(n,e)=>{let t=await n.blocks.getGenesisBlock();if(t===null||!Address.isValid($[t.id]?.resolveUtils))return e.map(()=>null);let r=$[t.id].resolveUtils,o=await n.contracts.executeCall(r,ABIItem.ofSignature(ABIFunction,"function getNames(address[] addresses) returns (string[] names)"),[e]),[i]=o.result.array;return i.map(a=>a===""?null:a)},P={resolveName:co,resolveNames:lo,lookupAddress:po,lookupAddresses:uo};var q=class{constructor(e){this.httpClient=e;}async getAccount(e,t){let r=t?.revision?.toString();return new K(await this.httpClient.get(p.accounts.get.ACCOUNT_DETAIL(e.toString()),{query:y({revision:r})}))}async getBytecode(e,t){let r=t?.revision?.toString(),o=await this.httpClient.get(p.accounts.get.ACCOUNT_BYTECODE(e.toString()),{query:y({revision:r})});return HexUInt.of(o.code)}async getStorageAt(e,t,r){let o=t.toString(),i=r?.revision?.toString(),a=await this.httpClient.get(p.accounts.get.STORAGE_AT(e.toString(),o),{query:y({pos:o,revision:i})});return HexUInt.of(a.value)}};var J=class{constructor(e,t){this.thor=e;this.onBlockError=t?.onBlockError,t?.isPollingEnabled===!0&&this.setupPolling();}headBlock=null;onBlockError;pollInstance;destroy(){this.pollInstance!=null&&this.pollInstance.stopListen();}setupPolling(){this.pollInstance=x.createEventPoll(async()=>await this.thor.blocks.getBestBlockCompressed(),1e4).onData(e=>{this.headBlock=e;}).onError(this.onBlockError??(()=>{})),this.pollInstance.startListen();}async getBlockCompressed(e){if(e!=null&&!Revision.isValid(e))throw new InvalidDataType("BlocksModule.getBlockCompressed()",'Invalid revision. The revision must be a string representing a block number or block id (also "best" is accepted which represents the best block & "finalized" for the finalized block).',{revision:e});return await this.thor.httpClient.http("GET",p.blocks.get.BLOCK_DETAIL(e))}async getBlockExpanded(e){if(e!=null&&!Revision.isValid(e))throw new InvalidDataType("BlocksModule.getBlockExpanded()",'Invalid revision. The revision must be a string representing a block number or block id (also "best" is accepted which represents the best block & "finalized" for the finalized block).',{revision:e});return await this.thor.httpClient.http("GET",p.blocks.get.BLOCK_DETAIL(e),{query:y({expanded:!0})})}async getBestBlockCompressed(){return await this.getBlockCompressed("best")}async getBestBlockExpanded(){return await this.getBlockExpanded("best")}async getBestBlockRef(){let e=await this.getBestBlockCompressed();return e===null?null:e.id.slice(0,18)}async getFinalBlockCompressed(){return await this.getBlockCompressed("finalized")}async getFinalBlockExpanded(){return await this.getBlockExpanded("finalized")}async _waitForBlock(e,t,r){if(e!=null&&e<=0)throw new InvalidDataType("BlocksModule.waitForBlock()","Invalid blockNumber. The blockNumber must be a number representing a block number.",{blockNumber:e});return await x.SyncPoll(async()=>t?await this.getBestBlockCompressed():await this.getBestBlockExpanded(),{requestIntervalInMilliseconds:r?.intervalMs,maximumWaitingTimeInMilliseconds:r?.timeoutMs}).waitUntil(o=>o!=null&&o?.number>=e)}async waitForBlockCompressed(e,t){return await this._waitForBlock(e,!1,t)}async waitForBlockExpanded(e,t){return await this._waitForBlock(e,!0,t)}getHeadBlock(){return this.headBlock}async getGenesisBlock(){return await this.getBlockCompressed(0)}getAllAddressesIntoABlock(e){let t=new Set;return t.add(e.beneficiary),t.add(e.signer),e.transactions.forEach(r=>{r.clauses.forEach(o=>{typeof o.to=="string"&&t.add(o.to);}),t.add(r.delegator),t.add(r.gasPayer),t.add(r.origin),r.outputs.forEach(o=>{typeof o.contractAddress=="string"&&t.add(o.contractAddress),o.events.forEach(i=>{t.add(i.address);}),o.transfers.forEach(i=>{t.add(i.recipient),t.add(i.sender);});});}),Array.from(t)}};var _e=Keccak256.of(Txt.of("Error(string)").bytes).toString().slice(0,10),Oe=Keccak256.of(Txt.of("Panic(uint256)").bytes).toString().slice(0,10);function ge(n){if(n.startsWith(_e))return ABI.ofEncoded("string","0x"+n.slice(_e.length)).getFirstDecodedValue();if(n.startsWith(Oe)){let e=ABI.ofEncoded("uint256","0x"+n.slice(Oe.length)).getFirstDecodedValue();return `Panic(0x${parseInt(e).toString(16).padStart(2,"0")})`}}var fe=class{contract;criteriaSet;constructor(e,t){this.contract=e,this.criteriaSet=t;}async get(e){let t={range:e?.range??{unit:"block",from:0,to:(await this.contract.thor.blocks.getBestBlockCompressed())?.number},criteriaSet:this.criteriaSet,options:e?.options,order:e?.order??"asc"};return await this.contract.thor.logs.filterEventLogs(t)}};function W(n){return new Proxy(n.read,{get:(e,t)=>async(...r)=>{let o=Ae(r),i=o.clauseAdditionalOptions?.comment,a=o.clauseAdditionalOptions?.revision,c=n.getFunctionAbi(t),d=await n.thor.contracts.executeCall(n.address,c,o.args,{caller:n.getSigner()!==void 0?await n.getSigner()?.getAddress():void 0,...n.getContractReadOptions(),comment:i,revision:a,includeABI:!0});if(!d.success)throw new ContractCallError(c.stringSignature,d.result.errorMessage,{contractAddress:n.address});return d.result.array}})}function j(n){return new Proxy(n.transact,{get:(e,t)=>async(...r)=>{if(n.getSigner()===void 0)throw new InvalidTransactionField("getTransactProxy()","Caller signer is required to transact with the contract.",{fieldName:"signer",prop:t});let o=n.getContractTransactOptions(),i=Ae(r),a=i.clauseAdditionalOptions?.value,c=i.clauseAdditionalOptions?.comment;return r=i.args,await n.thor.contracts.executeTransaction(n.getSigner(),n.address,n.getFunctionAbi(t),r,{...o,value:o.value??a??0,comment:c,includeABI:!0})}})}function Un(n){return new Proxy(n.filters,{get:(e,t)=>r=>{let o=Gn(n,t,r);return new fe(n,[o])}})}function Fn(n){return new Proxy(n.clause,{get:(e,t)=>(...r)=>{let o=n.getContractTransactOptions(),i=Ae(r),a=i.clauseAdditionalOptions?.value,c=i.clauseAdditionalOptions?.comment;return r=i.args,{clause:Clause.callFunction(Address.of(n.address),n.getFunctionAbi(t),r,VET.of(o.value??a??0,Units.wei),{comment:c,includeABI:!0}),functionAbi:n.getFunctionAbi(t)}}})}function Hn(n){return new Proxy(n.criteria,{get:(e,t)=>r=>Gn(n,t,r)})}function Gn(n,e,t){let r=n.getEventAbi(e),o=new Map(r.encodeFilterTopicsNoNull(t).map((i,a)=>[a,i]));return {criteria:{address:n.address,topic0:o.get(0),topic1:o.has(1)?o.get(1):void 0,topic2:o.has(2)?o.get(2):void 0,topic3:o.has(3)?o.get(3):void 0,topic4:o.has(4)?o.get(4):void 0},eventAbi:r}}function Ae(n){let e=bo(n),t=Po(n),r=wo(n);return (e!==void 0||t!==void 0||r!==void 0)&&(n=n.filter(o=>!(Kn(o)||$n(o)||qn(o)))),{args:n,clauseAdditionalOptions:{value:e?.value,comment:t?.comment,revision:r?.revision}}}function bo(n){return n.find(e=>Kn(e))}function Po(n){return n.find(e=>$n(e))}function wo(n){return n.find(e=>qn(e))}function Kn(n){return n.value!==void 0}function $n(n){return n.comment!==void 0}function qn(n){return n.revision!==void 0}var v=class{thor;address;abi;signer;deployTransactionReceipt;read={};transact={};filters={};clause={};criteria={};contractCallOptions={};contractTransactionOptions={};constructor(e,t,r,o,i){this.abi=t,this.thor=r,this.address=e,this.deployTransactionReceipt=i,this.signer=o,this.read=W(this),this.transact=j(this),this.filters=Un(this),this.clause=Fn(this),this.criteria=Hn(this);}setContractReadOptions(e){return this.contractCallOptions=e,this.read=W(this),this.contractCallOptions}getContractReadOptions(){return this.contractCallOptions}clearContractReadOptions(){this.contractCallOptions={},this.read=W(this);}setContractTransactOptions(e){return this.contractTransactionOptions=e,this.transact=j(this),this.contractTransactionOptions}getContractTransactOptions(){return this.contractTransactionOptions}clearContractTransactOptions(){this.contractTransactionOptions={},this.transact=j(this);}setSigner(e){return this.signer=e,this.transact=j(this),this.read=W(this),this.signer}getSigner(){return this.signer}getFunctionAbi(e){return ABIContract.ofAbi(this.abi).getFunction(e.toString())}getEventAbi(e){return ABIContract.ofAbi(this.abi).getEvent(e.toString())}};var L=class{abi;bytecode;signer;thor;deployTransaction;constructor(e,t,r,o){this.abi=e,this.bytecode=t,this.signer=r,this.thor=o;}async startDeployment(e,t){let r=Clause.deployContract(HexUInt.of(this.bytecode),e),o=await this.thor.gas.estimateGas([r],await this.signer.getAddress()),i=await this.thor.transactions.buildTransactionBody([r],o.totalGas,t),a=await this.signer.signTransaction(xe.transactionBodyToTransactionRequestInput(i,await this.signer.getAddress()));return this.deployTransaction=await this.thor.transactions.sendTransaction(Transaction.decode(HexUInt.of(a.slice(2)).bytes,!0)),this}async waitForDeployment(){if(this.deployTransaction?.id===void 0)throw new CannotFindTransaction("ContractFactory.waitForDeployment()","Cannot find a contract deployment transaction",{networkUrl:this.thor.httpClient.baseURL});let e=await this.deployTransaction.wait();if(e?.outputs[0]?.contractAddress===null||e?.outputs[0]?.contractAddress===void 0)throw new ContractDeploymentFailed("ContractFactory.waitForDeployment()","Contract deployment failed.",{deployTransaction:this.deployTransaction});return new v(e?.outputs[0].contractAddress,this.abi,this.thor,this.signer,e)}getDeployTransaction(){return this.deployTransaction}};var Q=class{constructor(e){this.thor=e;}createContractFactory(e,t,r){return new L(e,t,r,this.thor)}load(e,t,r){return new v(e,t,this.thor,r)}getContractCallResult(e,t,r){if(r)return {success:!1,result:{errorMessage:ge(e)??""}};let o=Hex.of(e),i=t.decodeResult(o),a=t.decodeOutputAsArray(o);return {success:!0,result:{plain:i,array:a}}}async executeCall(e,t,r,o){let i=await this.thor.transactions.simulateTransaction([{to:e,value:"0",data:t.encodeData(r).toString()}],o);return this.getContractCallResult(i[0].data,t,i[0].reverted)}async executeMultipleClausesCall(e,t){return (await this.thor.transactions.simulateTransaction(e.map(o=>o.clause),t)).map((o,i)=>this.getContractCallResult(o.data,e[i].functionAbi,o.reverted))}async executeTransaction(e,t,r,o,i){let a=await e.sendTransaction({clauses:[Clause.callFunction(Address.of(t),r,o,VET.of(i?.value??0,Units.wei))],gas:i?.gas,gasLimit:i?.gasLimit,gasPrice:i?.gasPrice,gasPriceCoef:i?.gasPriceCoef,nonce:i?.nonce,value:i?.value,dependsOn:i?.dependsOn,expiration:i?.expiration,chainTag:i?.chainTag,blockRef:i?.blockRef});return {id:a,wait:async()=>await this.thor.transactions.waitForTransaction(a)}}async executeMultipleClausesTransaction(e,t,r){let o=await t.sendTransaction({clauses:e.map(i=>i.clause),gas:r?.gas,gasLimit:r?.gasLimit,gasPrice:r?.gasPrice,gasPriceCoef:r?.gasPriceCoef,nonce:r?.nonce,value:r?.value,dependsOn:r?.dependsOn,expiration:r?.expiration,chainTag:r?.chainTag,blockRef:r?.blockRef});return {id:o,wait:async()=>await this.thor.transactions.waitForTransaction(o)}}async getBaseGasPrice(){return await this.executeCall(de.PARAMS_ADDRESS,ABIContract.ofAbi(de.PARAMS_ABI).getFunction("get"),[dataUtils.encodeBytes32String("base-gas-price","left")])}};var z=class{constructor(e){this.thor=e;}async traceTransactionClause(e,t){this.validateTarget(e.target,"traceTransactionClause");let r=`${e.target.blockID}/${e.target.transaction}/${e.target.clauseIndex}`;return await this.thor.httpClient.http("POST",p.debug.post.TRACE_TRANSACTION_CLAUSE(),{query:{},body:{target:r,name:t,config:e.config},headers:{}})}async traceContractCall(e,t){if(e.contractInput?.to!==void 0&&e.contractInput.to!==null&&!Address.isValid(e.contractInput.to))throw new InvalidDataType("DebugModule.traceContractCall()",`Invalid address '${e.contractInput.to}' given as input for traceContractCall.`,{address:e.contractInput.to});if(e.contractInput?.data!==void 0&&!Hex.isValid(e.contractInput.data))throw new InvalidDataType("DebugModule.traceContractCall()",`Invalid data '${e.contractInput?.data}' given as input for traceContractCall.`,{data:e.contractInput?.data});if(e.contractInput?.value!==void 0&&!Hex.isValid0x(e.contractInput.value))throw new InvalidDataType("DebugModule.traceContractCall()",`Invalid value '${e.contractInput?.value}' given as input for traceContractCall.`,{value:e.contractInput?.value});return await this.thor.httpClient.http("POST",p.debug.post.TRACE_CONTRACT_CALL(),{query:{},body:{to:e.contractInput?.to,data:e.contractInput?.data,value:e.contractInput?.value,name:t,gas:e.transactionOptions?.gas,gasPrice:e.transactionOptions?.gasPrice,caller:e.transactionOptions?.caller,provedWork:e.transactionOptions?.provedWork,gasPayer:e.transactionOptions?.gasPayer,expiration:e.transactionOptions?.expiration,blockRef:e.transactionOptions?.blockRef,config:e.config},headers:{}})}async retrieveStorageRange(e){this.validateTarget(e.target,"retrieveStorageRange");let t=`${e.target.blockID}/${e.target.transaction}/${e.target.clauseIndex}`;return await this.thor.httpClient.http("POST",p.debug.post.RETRIEVE_STORAGE_RANGE(),{query:{},body:{target:t,address:e.options?.address,keyStart:e.options?.keyStart,maxResult:e.options?.maxResult},headers:{}})}validateTarget(e,t){if(!ThorId.isValid(e.blockID))throw new InvalidDataType("DebugModule.validateTarget()",`Invalid block ID '${e.blockID}' given as input for ${t}.`,{blockId:e.blockID});if(typeof e.transaction=="string"){if(!ThorId.isValid(e.transaction))throw new InvalidDataType("DebugModule.validateTarget()",`Invalid transaction id '${e.transaction}' given as input for ${t}.`,{transaction:e.transaction})}else if(e.transaction<0)throw new InvalidDataType("DebugModule.validateTarget()",`Invalid transaction index '${e.transaction}' given as input for ${t}.`,{transaction:e.transaction});if(e.clauseIndex<0)throw new InvalidDataType("DebugModule.validateTarget()",`Invalid clause index '${e.clauseIndex}' given as input for ${t}.`,{clauseIndex:e.clauseIndex})}};var Y=class{constructor(e){this.thor=e;}async estimateGas(e,t,r){if(e.length<=0)throw new InvalidDataType("GasModule.estimateGas()","Invalid clauses. Clauses must be an array of clauses with at least one clause.",{clauses:e,caller:t,options:r});if(r?.gasPadding!==void 0&&(r.gasPadding<=0||r.gasPadding>1))throw new InvalidDataType("GasModule.estimateGas()","Invalid gasPadding. gasPadding must be a number between (0, 1].",{gasPadding:r?.gasPadding});let o=await this.thor.transactions.simulateTransaction(e,{caller:t,...r}),i=o.some(u=>u.reverted),a=Number(Transaction.intrinsicGas(e).wei),c=o.reduce((u,T)=>u+T.gasUsed,0),d=(a+(c!==0?c+15e3:0))*(1+(r?.gasPadding??0));return i?{totalGas:d,reverted:!0,revertReasons:o.map(u=>ge(u.data)??""),vmErrors:o.map(u=>u.vmError)}:{totalGas:d,reverted:!1,revertReasons:[],vmErrors:[]}}};var X=class{constructor(e){this.thor=e;}async filterRawEventLogs(e){return await this.thor.httpClient.http("POST",p.logs.post.EVENT_LOGS(),{query:{},body:e,headers:{}})}async filterEventLogs(e){let t=e.criteriaSet?.map(i=>i.eventAbi),r=await this.getRawEventLogs(e),o=[];if(t!==void 0){let i=this.removeDuplicatedAbis(t);r.forEach(a=>{let c=i.get(a.topics[0]);if(c==null)throw new InvalidAbiItem("LogsModule.filterEventLogs","Topic not found in the provided ABIs.",{type:"event",value:a.topics[0]});a.decodedData=c.decodeEventLogAsArray({data:Hex.of(a.data),topics:a.topics.map(d=>Hex.of(d))}),o.push(a);});}return o}async filterGroupedEventLogs(e){let t=e.criteriaSet?.map(i=>i.eventAbi),r=await this.getRawEventLogs(e),o=new Map;if(t!==void 0){let i=this.removeDuplicatedAbis(t);i.forEach(a=>o.set(a.signatureHash,[])),r.forEach(a=>{let c=i.get(a.topics[0]);if(c==null)throw new InvalidAbiItem("LogsModule.filterGroupedEventLogs","Topic not found in the provided ABIs.",{type:"event",value:a.topics[0]});a.decodedData=c.decodeEventLogAsArray({data:Hex.of(a.data),topics:a.topics.map(d=>Hex.of(d))}),o.get(a.topics[0])?.push(a);});}return Array.from(o.values())}async getRawEventLogs(e){let t=e.criteriaSet?.map(o=>o.criteria),r={range:e.range??{unit:"block",from:0,to:(await this.thor.blocks.getBestBlockCompressed())?.number},criteriaSet:t,options:e.options,order:e.order??"asc"};return await this.filterRawEventLogs(r)}removeDuplicatedAbis(e){let t=new Map;return e.forEach(r=>{t.has(r.signatureHash)||t.set(r.signatureHash,r);}),t}async filterTransferLogs(e){return await this.thor.httpClient.http("POST",p.logs.post.TRANSFER_LOGS(),{query:{},body:e,headers:{}})}};var Z=class{constructor(e){this.thor=e;}async getNodes(){return await this.thor.httpClient.http("GET",p.nodes.get.NODES())??[]}async isHealthy(){let e=await this.thor.blocks.getBestBlockCompressed(),t=this.getTimestampFromBlock(e),r=Math.floor(Date.now()/1e3)-t;return Math.abs(r)<30}getTimestampFromBlock=e=>{if(e==null||typeof e!="object"||!("timestamp"in e)||typeof e.timestamp!="number")throw new InvalidDataType("NodesModule.getTimestampFromBlock()","Sending failed: Input must be a valid raw transaction in hex format.",{response:e});return e?.timestamp}};var ee=class{constructor(e){this.thor=e;}async getTransaction(e,t){if(!ThorId.isValid(e))throw new InvalidDataType("TransactionsModule.getTransaction()","Invalid transaction ID given as input. Input must be an hex string of length 64.",{id:e});if(t?.head!==void 0&&!ThorId.isValid(t.head))throw new InvalidDataType("TransactionsModule.getTransaction()","Invalid head given as input. Input must be an hex string of length 64.",{head:t?.head});return await this.thor.httpClient.http("GET",p.transactions.get.TRANSACTION(e),{query:y({raw:!1,head:t?.head,pending:t?.pending})})}async getTransactionRaw(e,t){if(!ThorId.isValid(e))throw new InvalidDataType("TransactionsModule.getTransactionRaw()","Invalid transaction ID given as input. Input must be an hex string of length 64.",{id:e});if(t?.head!==void 0&&!ThorId.isValid(t.head))throw new InvalidDataType("TransactionsModule.getTransaction()","Invalid head given as input. Input must be an hex string of length 64.",{head:t?.head});return await this.thor.httpClient.http("GET",p.transactions.get.TRANSACTION(e),{query:y({raw:!0,head:t?.head,pending:t?.pending})})}async getTransactionReceipt(e,t){if(!ThorId.isValid(e))throw new InvalidDataType("TransactionsModule.getTransactionReceipt()","Invalid transaction ID given as input. Input must be an hex string of length 64.",{id:e});if(t?.head!==void 0&&!ThorId.isValid(t.head))throw new InvalidDataType("TransactionsModule.getTransaction()","Invalid head given as input. Input must be an hex string of length 64.",{head:t?.head});return await this.thor.httpClient.http("GET",p.transactions.get.TRANSACTION_RECEIPT(e),{query:y({head:t?.head})})}async sendRawTransaction(e){if(!Hex.isValid0x(e))throw new InvalidDataType("TransactionsModule.sendRawTransaction()","Sending failed: Input must be a valid raw transaction in hex format.",{raw:e});try{Transaction.decode(HexUInt.of(e.slice(2)).bytes,!0);}catch(r){throw new InvalidDataType("TransactionsModule.sendRawTransaction()","Sending failed: Input must be a valid raw transaction in hex format. Decoding error encountered.",{raw:e},r)}let t=await this.thor.httpClient.http("POST",p.transactions.post.TRANSACTION(),{body:{raw:e}});return {id:t.id,wait:async()=>await this.waitForTransaction(t.id)}}async sendTransaction(e){if(!e.isSigned)throw new InvalidDataType("TransactionsModule.sendTransaction()","Invalid transaction given as input. Transaction must be signed.",{signedTx:e});let t=Hex.of(e.encoded).toString();return await this.sendRawTransaction(t)}async waitForTransaction(e,t){if(!ThorId.isValid(e))throw new InvalidDataType("TransactionsModule.waitForTransaction()","Invalid transaction ID given as input. Input must be an hex string of length 64.",{txID:e});return await x.SyncPoll(async()=>await this.thor.transactions.getTransactionReceipt(e),{requestIntervalInMilliseconds:t?.intervalMs,maximumWaitingTimeInMilliseconds:t?.timeoutMs}).waitUntil(r=>r!==null)}async buildTransactionBody(e,t,r){let o=await this.thor.blocks.getBlockCompressed(0);if(o===null)throw new InvalidTransactionField("TransactionsModule.buildTransactionBody()","Error while building transaction body: Cannot get genesis block.",{fieldName:"genesisBlock",genesisBlock:o,clauses:e,options:r});let i=r?.blockRef??await this.thor.blocks.getBestBlockRef();if(i===null)throw new InvalidTransactionField("TransactionsModule.buildTransactionBody()","Error while building transaction body: Cannot get blockRef.",{fieldName:"blockRef",blockRef:i,clauses:e,options:r});let a=r?.chainTag??+`0x${o.id.slice(64)}`;return {blockRef:i,chainTag:a,clauses:await this.resolveNamesInClauses(e),dependsOn:r?.dependsOn??null,expiration:r?.expiration??32,gas:t,gasPriceCoef:r?.gasPriceCoef??0,nonce:r?.nonce??Hex.random(8).toString(),reserved:r?.isDelegated===!0?{features:1}:void 0}}async resolveNamesInClauses(e){let t=e.reduce((i,a)=>(typeof a.to=="string"&&!i.has(a.to)&&a.to.includes(".")&&i.set(a.to,a.to),i),new Map),r=[...t.keys()];return t.size===0?e:((await P.resolveNames(this.thor,r)).forEach((i,a)=>{i!==null&&t.set(r[a],i);}),e.map(i=>typeof i.to!="string"?i:{to:t.get(i.to)??i.to,data:i.data,value:i.value}))}async simulateTransaction(e,t){let{revision:r,caller:o,gasPrice:i,gasPayer:a,gas:c,blockRef:d,expiration:u,provedWork:T}=t??{};if(r!=null&&!Revision.isValid(r))throw new InvalidDataType("TransactionsModule.simulateTransaction()","Invalid revision given as input. Input must be a valid revision (i.e., a block number or block ID).",{revision:r});return await this.thor.httpClient.http("POST",p.accounts.post.SIMULATE_TRANSACTION(r),{query:y({revision:r}),body:{clauses:await this.resolveNamesInClauses(e.map(G=>({to:G.to,data:G.data,value:BigInt(G.value).toString()}))),gas:c,gasPrice:i,caller:o,provedWork:T,gasPayer:a,expiration:u,blockRef:d}})}decodeRevertReason(e,t){if(e.startsWith(ue))return ABI.ofEncoded("string",`0x${e.slice(ue.length)}`).getFirstDecodedValue();if(e.startsWith(me)){let r=ABI.ofEncoded("uint256",`0x${e.slice(me.length)}`).getFirstDecodedValue();return `Panic(0x${parseInt(r).toString(16).padStart(2,"0")})`}else if(t!==void 0)return new Interface([ErrorFragment.from(t)]).decodeErrorResult(ErrorFragment.from(t),e).toArray()[0];return ""}async getRevertReason(e,t){let r=this.thor.blocks,o=this.thor.debug,i=await this.getTransaction(e),a=i!==null?await r.getBlockExpanded(i.meta.blockID):null;if(a===null||i===null)return null;let c=R(h.formatToRPCStandard(a,""),e);for(let d=0;d<i.clauses.length;d++){let u=await o.traceTransactionClause({target:{blockID:a.id,transaction:c,clauseIndex:d},config:{OnlyTopCall:!0}},"call");if(u.output!==void 0)return this.decodeRevertReason(u.output,t)}return null}};var Go=async(n,e,t,r)=>{let o=Hex.of(n.encoded).toString(),i={origin:t,raw:o};try{let a=await r.http("POST",e,{body:i});return HexUInt.of(a.signature.slice(2)).bytes}catch(a){throw new NotDelegatedTransaction("_getDelegationSignature()","Delegation failed: Cannot get signature from delegator.",{delegatorUrl:e},a)}},V=n=>{let e=n==null,t=!e&&n?.delegatorUrl!==void 0,r=!e&&n?.delegatorPrivateKey!==void 0;return {isDelegated:()=>t||r,delegatorOrUndefined:()=>e?void 0:n,delegatorOrNull:()=>e?null:n,getDelegationSignatureUsingUrl:async(o,i,a)=>{if(!t)throw new NotDelegatedTransaction("DelegationHandler.getDelegationSignatureUsingUrl()","Delegation with url failed: delegatorUrl is not defined.",void 0);return await Go(o,n?.delegatorUrl,i,a)}}};var te=class n{constructor(e,t){this.httpClient=e;this.accounts=new q(e),this.nodes=new Z(this),this.blocks=new J(this,t),this.logs=new X(this),this.transactions=new ee(this),this.contracts=new Q(this),this.gas=new Y(this),this.debug=new z(this);}accounts;nodes;blocks;logs;transactions;contracts;gas;debug;static at(e,t){return new n(new k(e),t)}destroy(){this.blocks.destroy();}static fromUrl(e,t){return n.at(e,t)}};var re=class{MESSAGE_PREFIX=Txt.of(`Ethereum Signed Message:
`).bytes;provider;constructor(e){this.provider=e;}async populateCall(e){if(e.from===void 0||e.from===null)e.from=Address.checksum(HexUInt.of(await this.getAddress()));else if(Address.checksum(HexUInt.of(e.from))!==Address.checksum(HexUInt.of(await this.getAddress())))throw new InvalidDataType("VeChainAbstractSigner.populateCall()","From address does not match the signer address.",{signerAddress:Address.checksum(HexUInt.of(await this.getAddress())),fromAddress:Address.checksum(HexUInt.of(e.from))});return e.to===void 0&&(e.to=null),e.clauses!==void 0&&e.clauses.length>0&&(e.to=e.clauses[0].to,e.value=e.clauses[0].value,e.data=e.clauses[0].data),e}async populateTransaction(e){if(this.provider===void 0)throw new JSONRPCInvalidParams("VechainAbstractSigner.populateTransaction()","Thor client not found into the signer. Please attach a Provider with a thor client to your signer instance.",{provider:this.provider});let t=this.provider.thorClient,r=await this.populateCall(e),o=e.gas!==void 0?Number(e.gas):await this.estimateGas(e);return await t.transactions.buildTransactionBody(r.clauses??this._buildClauses(r),o,{isDelegated:this.provider?.enableDelegation,nonce:r.nonce??await this.getNonce("pending"),blockRef:r.blockRef??void 0,chainTag:r.chainTag??void 0,dependsOn:r.dependsOn??void 0,expiration:r.expiration,gasPriceCoef:r.gasPriceCoef??void 0})}async estimateGas(e){if(this.provider===void 0)throw new JSONRPCInvalidParams("VechainAbstractSigner.estimateGas()","Thor client not found into the signer. Please attach a Provider with a thor client to your signer instance.",{provider:this.provider});let t=this.provider.thorClient,r=await this.populateCall(e);return (await t.gas.estimateGas(r.clauses??this._buildClauses(r),r.from)).totalGas}async call(e,t){if(this.provider===void 0)throw new JSONRPCInvalidParams("VechainAbstractSigner.call()","Thor client not found into the signer. Please attach a Provider with a thor client to your signer instance.",{provider:this.provider});let r=this.provider.thorClient,o=await this.populateCall(e);return (await r.transactions.simulateTransaction(o.clauses??this._buildClauses(o),{revision:t??void 0,gas:o.gas??void 0,gasPrice:o.gasPrice??void 0,caller:o.from,provedWork:o.provedWork??void 0,gasPayer:o.gasPayer??void 0,expiration:o.expiration??void 0,blockRef:o.blockRef??void 0}))[0].data}async getNonce(e){return this.provider!==void 0?await this.provider.request({method:"eth_getTransactionCount",params:[await this.getAddress(),e]}):Hex.random(6).toString()}async resolveName(e){return this.provider===void 0?null:await P.resolveName(this.provider.thorClient,e)}_buildClauses(e){return e.to!==void 0&&e.to!==null?[{to:e.to,data:e.data??"0x",value:e.value??"0x0"}]:[Clause.deployContract(HexUInt.of(e.data??0))]}};var oe=class n extends re{constructor(t,r){if(!Secp256k1.isValidPrivateKey(t))throw new InvalidSecp256k1PrivateKey("VeChainPrivateKeySigner.constructor()","Invalid private key used to sign initialize the signer. Ensure it's a valid Secp256k1 private key.",void 0);super(r);this.privateKey=t;}connect(t){return new n(this.privateKey,t)}async getAddress(){return Address.checksum(HexUInt.of(await Promise.resolve(Address.ofPrivateKey(this.privateKey).toString())))}async signTransaction(t){if(this.provider===void 0)throw new JSONRPCInvalidParams("VeChainPrivateKeySigner.signTransaction()","Thor provider is not found into the signer. Please attach a Provider to your signer instance.",{transactionToSign:t});return await this._signFlow(t,V(await this.provider?.wallet?.getDelegator()).delegatorOrNull(),this.provider.thorClient)}async sendTransaction(t){if(this.provider===void 0)throw new JSONRPCInvalidParams("VeChainPrivateKeySigner.sendTransaction()","Thor provider is not found into the signer. Please attach a Provider to your signer instance.",{transactionToSend:t});let r=this.provider,o=await this.signTransaction(t);return await r.request({method:"eth_sendRawTransaction",params:[o]})}async signMessage(t){return await new Promise((r,o)=>{try{let i=typeof t=="string"?Txt.of(t).bytes:t,a=Secp256k1.sign(Keccak256.of(ar.concatBytes(this.MESSAGE_PREFIX,Txt.of(i.length).bytes,i)).bytes,new Uint8Array(this.privateKey));a[a.length-1]+=27,r(Hex.of(a).toString());}catch(i){let a=i instanceof Error?i:new Error(i!==void 0?stringifyData(i):"Error while signing the message");o(a);}})}async signTypedData(t,r,o){return await new Promise((i,a)=>{try{let c=Hex.of(TypedDataEncoder.hash(t,r,o)).bytes,d=Secp256k1.sign(c,new Uint8Array(this.privateKey));d[d.length-1]+=27,i(Hex.of(d).toString());}catch(c){let d=c instanceof Error?c:new Error(c!==void 0?stringifyData(c):"Error while signing typed data");a(d);}})}async _signFlow(t,r,o){let i=await this.populateTransaction(t);return r!==null?await this._signWithDelegator(i,this.privateKey,o,r):Hex.of(Transaction.of(i).sign(this.privateKey).encoded).toString()}async _signWithDelegator(t,r,o,i){let a=Address.ofPrivateKey(r).toString(),c=Transaction.of(t);if(i?.delegatorPrivateKey!==void 0)return Hex.of(Transaction.of(t).signWithDelegator(r,HexUInt.of(i?.delegatorPrivateKey).bytes).encoded).toString();let d=await V(i).getDelegationSignatureUsingUrl(c,a,o.httpClient),u=Secp256k1.sign(c.getTransactionHash().bytes,r),T=new Uint8Array(u.length+d.length);return T.set(u),T.set(d,u.length),Hex.of(Transaction.of(c.body,T).encoded).toString()}};var be=class{accounts;delegator;constructor(e,t){this.accounts=e,this.delegator=t?.delegator;}getSignerSync(e,t){let r=this.getAccountSync(t);return r?.privateKey!==void 0?new oe(r.privateKey,e):null}getAddressesSync(){return this.accounts.map(e=>e.address)}getAccountSync(e){if(e===void 0||typeof e=="number")return this.accounts[e??0]??null;if(!Address.isValid(e))throw new InvalidDataType("AbstractProviderInternalWallet.getAccountSync()","Invalid params expected an address.",{addressOrIndex:e});return this.accounts.find(r=>Address.checksum(HexUInt.of(r.address))===Address.checksum(HexUInt.of(e)))??null}getDelegatorSync(){return V(this.delegator).delegatorOrNull()}};var ie=class extends be{async getSigner(e,t){return await Promise.resolve(this.getSignerSync(e,t))}async getAddresses(){return await Promise.resolve(this.getAddressesSync())}async getAccount(e){return await Promise.resolve(this.getAccountSync(e))}async getDelegator(){return await Promise.resolve(this.getDelegatorSync())}};var Ve=class extends ie{mnemonic;derivationPath;count;initialIndex;constructor(e,t=1,r=0,o=HDKey.VET_DERIVATION_PATH,i){super([...Array(t).keys()].map(a=>{let c=HDKey.fromMnemonic(e,o).deriveChild(a+r).privateKey;return {privateKey:c,publicKey:Secp256k1.derivePublicKey(c),address:Address.ofPrivateKey(c).toString()}}),i),this.mnemonic=e,this.derivationPath=o,this.count=t,this.initialIndex=r;}};var Ue=class extends JsonRpcApiProvider{hardhatProvider;constructor(e,t,r){super({name:t,chainId:e}),this.hardhatProvider=r;}async send(e,t){return this._start(),await super.send(e,t)}async _send(e){let t=Array.isArray(e)?e:[e],r=[];for(let o of t)try{let i=await this.hardhatProvider.send(o.method,o.params);r.push({id:o.id,result:i});}catch(i){r.push({id:o.id,error:{code:-32603,message:stringifyData(i)}});}return r}};var Fe=5e3;var f=n=>typeof n=="string"?n==="latest"||n==="finalized"||n==="safe"||n==="pending"?"best":n==="earliest"?Hex.of(0).toString():n:n.blockNumber!==void 0?Hex.of(n.blockNumber).toString():n.blockHash;var Pe={MAINNET:"0x186a9",TESTNET:"0x186aa"};var R=(n,e)=>{let t=typeof n.transactions[0]=="string"?n.transactions.findIndex(r=>r===e):n.transactions.findIndex(r=>r.hash===e);if(t===-1)throw new InvalidDataType("getTransactionIndexIntoBlock()","Transaction not found in block.",{block:n,hash:e});return t},He=(n,e,t)=>{let r=R(h.formatToRPCStandard(n,t),e),o=0;for(let i=0;i<r;i++){let a=n.transactions[i];for(let c of a.outputs)o+=c.events.length;}return o};var pr=(n,e,t,r,o)=>({blockHash:e,blockNumber:Quantity.of(t).toString(),from:n.origin,gas:Quantity.of(HexUInt.of(n.gas).bi).toString(),chainId:r,hash:n.id,nonce:n.nonce,transactionIndex:Quantity.of(o).toString(),input:n.clauses[0]?.data!==void 0?n.clauses[0].data:"",to:n.clauses[0]?.to!==void 0?n.clauses[0].to:null,value:n.clauses[0]?.value!==void 0?Quantity.of(HexUInt.of(n.clauses[0].value).bi).toString():"",gasPrice:"0x0",type:"0x0",v:"0x0",r:"0x0",s:"0x0",accessList:[],maxFeePerGas:"0x0",maxPriorityFeePerGas:"0x0",yParity:"0x0"}),ur=(n,e,t)=>pr(n,n.meta.blockID,n.meta.blockNumber,e,t),mr=(n,e,t,r)=>pr(n,e.id,e.number,r,t);function gr(n,e,t,r,o){let i=R(h.formatToRPCStandard(r,o),n),a=He(r,n,o),c=[],d=a;return e.outputs.forEach(u=>{u.events.forEach(T=>{c.push({blockHash:e.meta.blockID,blockNumber:Quantity.of(e.meta.blockNumber).toString(),transactionHash:e.meta.txID,address:T.address,topics:T.topics.map(G=>G),data:T.data,removed:!1,transactionIndex:Quantity.of(i).toString(),logIndex:Quantity.of(d).toString()}),d++;});}),{blockHash:e.meta.blockID,blockNumber:Quantity.of(e.meta.blockNumber).toString(),contractAddress:e.outputs.length>0?e.outputs[0].contractAddress:null,from:t.origin,gasUsed:Quantity.of(e.gasUsed).toString(),logs:c,status:e.reverted?"0x0":"0x1",to:t.clauses[0].to,transactionHash:e.meta.txID,transactionIndex:Quantity.of(i).toString(),logsBloom:Hex.of(ZERO_BYTES(256)).toString(),cumulativeGasUsed:"0x0",effectiveGasPrice:"0x0",type:"0x0"}}var A={formatToRPCStandard:ur,formatExpandedBlockToRPCStandard:mr,formatTransactionReceiptToRPCStandard:gr};var fr=(n,e)=>{let t=typeof n.transactions[0]=="string"?n.transactions:n.transactions.map((r,o)=>A.formatExpandedBlockToRPCStandard(r,n,o,e));return {hash:n.id,parentHash:n.parentID,number:Quantity.of(n.number).toString(),size:Quantity.of(n.size).toString(),stateRoot:n.stateRoot,receiptsRoot:n.receiptsRoot,transactionsRoot:n.txsRoot,timestamp:Quantity.of(n.timestamp).toString(),gasLimit:Quantity.of(n.gasLimit).toString(),gasUsed:Quantity.of(n.gasUsed).toString(),transactions:t,miner:n.beneficiary,difficulty:"0x0",totalDifficulty:"0x0",uncles:[],sha3Uncles:HexUInt.of(ZERO_BYTES(32)).toString(),nonce:HexUInt.of(ZERO_BYTES(8)).toString(),logsBloom:HexUInt.of(ZERO_BYTES(256)).toString(),extraData:"0x",baseFeePerGas:"0x0",mixHash:HexUInt.of(ZERO_BYTES(32)).toString()}};var h={formatToRPCStandard:fr};function Ge(n,e){return n==="call"?{...e,revertReason:""}:Object.fromEntries(Object.entries(e).map(([t,r])=>{let o={balance:r.balance,code:r.code,storage:r.storage};return [t,{...o,nonce:0}]}))}var se={formatToRPCStandard:Ge};var Ke=n=>n.map(e=>({address:e.address,blockHash:e.meta.blockID,blockNumber:HexInt.of(e.meta.blockNumber).toString(),data:e.data,logIndex:"0x0",removed:!1,topics:e.topics,transactionHash:e.meta.txID,transactionIndex:"0x0"})),ii=(n,e)=>({address:e,topic0:n[0]??void 0,topic1:n[1]??void 0,topic2:n[2]??void 0,topic3:n[3]??void 0,topic4:n[4]??void 0}),$e=n=>{let e=[];return n.address!==void 0?e=typeof n.address=="string"?[n.address]:n.address:e=[void 0],e.map(r=>ai(r,n.topics??[])).flat()},ai=(n,e)=>{let t=[],r=[];e.forEach(i=>{Array.isArray(i)||t.push(i),Array.isArray(i)&&r.push(i);});let o=[];return t.length>0&&o.push(ii(t,n)),r.forEach(i=>{i.forEach(a=>{o.push({address:n,topic0:a,topic1:void 0,topic2:void 0,topic3:void 0,topic4:void 0});});}),o.length===0&&o.push({address:n,topic0:void 0,topic1:void 0,topic2:void 0,topic3:void 0,topic4:void 0}),o};var qe=async()=>(VeChainSDKLogger("warning").log({title:"debug_getBadBlocks",messages:['Method "debug_getBadBlocks" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var Je=async()=>(VeChainSDKLogger("warning").log({title:"debug_getRawBlock",messages:['Method "debug_getRawBlock" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var We=async()=>(VeChainSDKLogger("warning").log({title:"debug_getRawHeader",messages:['Method "debug_getRawHeader" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var je=async()=>(VeChainSDKLogger("warning").log({title:"debug_getRawReceipts",messages:['Method "debug_getRawReceipts" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var Qe=async()=>(VeChainSDKLogger("warning").log({title:"debug_getRawTransaction",messages:['Method "debug_getRawTransaction" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var m=async n=>{try{let e=await n.blocks.getGenesisBlock();if(e?.id===null||e?.id===void 0)throw new JSONRPCInvalidParams("eth_chainId()","The genesis block id is null or undefined. Unable to get the chain id.",{url:n.httpClient.baseURL});return e.id===networkInfo.mainnet.genesisBlock.id?Pe.MAINNET:Pe.TESTNET}catch(e){throw new JSONRPCInternalError("eth_chainId()",'Method "eth_chainId" failed.',{url:n.httpClient.baseURL,innerError:stringifyData(e)})}};var S=async(n,e)=>{if(e.length!==1||typeof e[0]!="string")throw new JSONRPCInvalidParams("eth_getTransactionReceipt",`Invalid input params for "eth_getTransactionReceipt" method. See ${l} for details.`,{params:e});if(!ThorId.isValid(e[0]))throw new JSONRPCInvalidParams("eth_getTransactionReceipt","Invalid transaction ID given as input. Input must be an hex string of length 64.",{params:e});try{let[t]=e,r=await n.transactions.getTransactionReceipt(t);if(r!==null){let o=await n.blocks.getBlockExpanded(r.meta.blockID),i=await n.transactions.getTransaction(t),a=await m(n);return i!==null?A.formatTransactionReceiptToRPCStandard(t,r,i,o,a):null}else return null}catch(t){throw new JSONRPCInternalError("eth_getTransactionReceipt()",'Method "eth_getTransactionReceipt" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(t)})}};var M=async(n,e)=>{if(e.length!==2||typeof e[0]!="string"||typeof e[1]!="object")throw new JSONRPCInvalidParams("debug_traceTransaction",`Invalid input params for "debug_traceTransaction" method. See ${l} for details.`,{params:e});let[t,r]=e;if(!ThorId.isValid(t))throw new InvalidDataType("debug_traceTransaction()","Invalid transaction ID given as input. Input must be an hex string of length 64.",{transactionId:t});let o=r.tracer==="callTracer"?"call":"prestate";try{let i=await S(n,[t]),a=await n.debug.traceTransactionClause({target:{blockID:i?.blockHash,transaction:i?.transactionHash,clauseIndex:0},config:{}},o);return se.formatToRPCStandard(o,a)}catch(i){throw new JSONRPCInternalError("debug_traceTransaction()",'Method "debug_traceTransaction" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(i)})}};var g=async(n,e)=>{if(e.length!==2||typeof e[0]!="string"||typeof e[1]!="boolean")throw new JSONRPCInvalidParams("eth_getBlockByNumber",`Invalid input params for "eth_getBlockByNumber" method. See ${l} for details.`,{params:e});try{let[t,r]=e,o="0x0";r&&(o=await m(n));let i=r?await n.blocks.getBlockExpanded(f(t)):await n.blocks.getBlockCompressed(f(t));return i!==null?h.formatToRPCStandard(i,o):null}catch(t){throw new JSONRPCInternalError("eth_getBlockByNumber()",'Method "eth_getBlockByNumber" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(t)})}};var E=async(n,e)=>{if(e.length!==2||typeof e[0]!="string"||!ThorId.isValid(e[0])||typeof e[1]!="boolean")throw new JSONRPCInvalidParams("eth_getBlockByHash",`Invalid input params for "eth_getBlockByHash" method. See ${l} for details.`,{params:e});try{return await g(n,e)}catch(t){throw new JSONRPCInternalError("eth_getBlockByHash()",'Method "eth_getBlockByHash" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(t)})}};var ze=async(n,e)=>{if(e.length!==2||typeof e[0]!="string"||!ThorId.isValid(e[0])||typeof e[1]!="object")throw new JSONRPCInvalidParams("debug_traceBlockByHash",'Invalid input params for "debug_traceBlockByHash" method. See https://www.quicknode.com/docs/ethereum/debug_traceBlockByHash for details.',{params:e});let[t,r]=e;try{let o=await E(n,[t,!1]);if(o===null)return [];let i=[];for(let a of o.transactions){let c=await M(n,[a,{...r,timeout:"5s"}]);i.push({txHash:a,result:c});}return i}catch(o){throw new JSONRPCInternalError("debug_traceBlockByHash()",'Method "debug_traceBlockByHash" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(o)})}};var Ye=async(n,e)=>{if(e.length!==2||typeof e[0]!="string"||typeof e[1]!="object")throw new JSONRPCInvalidParams("debug_traceBlockByNumber",'Invalid input params for "debug_traceBlockByNumber" method. See https://www.quicknode.com/docs/ethereum/debug_traceBlockByNumber for details.',{params:e});let[t,r]=e;try{let o=await g(n,[t,!1]);if(o===null)return [];let i=[];for(let a of o.transactions){let c=await M(n,[a,{...r,timeout:"5s"}]);i.push({txHash:a,result:c});}return i}catch(o){throw new JSONRPCInternalError("debug_traceBlockByNumber()",'Method "debug_traceBlockByNumber" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(o)})}};var Xe=async(n,e)=>{if(e.length!==3||typeof e[0]!="object"||typeof e[1]!="string"||typeof e[2]!="object")throw new JSONRPCInvalidParams("debug_traceCall",`Invalid input params for "debug_traceCall" method. See ${l} for details.`,{params:e});let t=e[0],r=e[2],o=r.tracer==="callTracer"?"call":"prestate";try{let i=await n.debug.traceContractCall({transactionOptions:{caller:t.from,gas:t.gas!==void 0?parseInt(t.gas,16):void 0,gasPrice:t.gasPrice},contractInput:{to:t.to,data:t.data},config:r.tracerConfig},o);return se.formatToRPCStandard(o,i)}catch(i){throw new JSONRPCInternalError("debug_traceCall()",'Method "debug_traceCall" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(i)})}};var Ze=async()=>(VeChainSDKLogger("warning").log({title:"engine_exchangeCapabilities",messages:['Method "engine_exchangeCapabilities" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var et=async()=>(VeChainSDKLogger("warning").log({title:"engine_exchangeTransitionConfigurationV1",messages:['Method "engine_exchangeTransitionConfigurationV1" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var tt=async()=>(VeChainSDKLogger("warning").log({title:"engine_forkchoiceUpdatedV1",messages:['Method "engine_forkchoiceUpdatedV1" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var nt=async()=>(VeChainSDKLogger("warning").log({title:"engine_forkchoiceUpdatedV2",messages:['Method "engine_forkchoiceUpdatedV2" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var rt=async()=>(VeChainSDKLogger("warning").log({title:"engine_forkchoiceUpdatedV3",messages:['Method "engine_forkchoiceUpdatedV3" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var ot=async()=>(VeChainSDKLogger("warning").log({title:"engine_getPayloadBodiesByHashV1",messages:['Method "engine_getPayloadBodiesByHashV1" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var it=async()=>(VeChainSDKLogger("warning").log({title:"engine_getPayloadBodiesByRangeV1",messages:['Method "engine_getPayloadBodiesByRangeV1" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var at=async()=>(VeChainSDKLogger("warning").log({title:"engine_getPayloadV1",messages:['Method "engine_getPayloadV1" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var st=async()=>(VeChainSDKLogger("warning").log({title:"engine_getPayloadV2",messages:['Method "engine_getPayloadV2" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var ct=async()=>(VeChainSDKLogger("warning").log({title:"engine_getPayloadV3",messages:['Method "engine_getPayloadV3" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var lt=async()=>(VeChainSDKLogger("warning").log({title:"engine_newPayloadV1",messages:['Method "engine_newPayloadV1" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var dt=async()=>(VeChainSDKLogger("warning").log({title:"engine_newPayloadV2",messages:['Method "engine_newPayloadV2" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var pt=async()=>(VeChainSDKLogger("warning").log({title:"engine_newPayloadV3",messages:['Method "engine_newPayloadV3" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var ce=async n=>n?.wallet!==void 0?await n?.wallet.getAddresses():[];var ut=async n=>{try{let e=await n.blocks.getBestBlockCompressed();return e?.number!==void 0?`0x${e.number.toString(16)}`:"0x0"}catch(e){throw new JSONRPCInternalError("eth_blockNumber()",'Method "eth_blockNumber" failed.',{url:n.httpClient.baseURL,innerError:stringifyData(e)})}};var mt=async(n,e)=>{if(e.length!==2||typeof e[0]!="object"||typeof e[1]!="object"&&typeof e[1]!="string")throw new JSONRPCInvalidParams("eth_call",`Invalid input params for "eth_call" method. See ${l} for details.`,{params:e});try{let[t,r]=e;return (await n.transactions.simulateTransaction([{to:t.to??null,value:t.value??"0x0",data:t.data??"0x0"}],{revision:f(r),gas:t.gas!==void 0?parseInt(t.gas,16):void 0,gasPrice:t.gasPrice??t.gasPrice,caller:t.from}))[0].data}catch(t){throw new JSONRPCInternalError("eth_call()",'Method "eth_call" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(t)})}};var gt=async()=>(VeChainSDKLogger("warning").log({title:"eth_coinbase",messages:['Method "eth_coinbase" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var ft=async()=>(VeChainSDKLogger("warning").log({title:"eth_createAccessList",messages:['Method "eth_createAccessList" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var ht=async(n,e)=>{if(![1,2].includes(e.length)||typeof e[0]!="object")throw new JSONRPCInvalidParams("eth_estimateGas",`Invalid input params for "eth_estimateGas" method. See ${l} for details.`,{params:e});try{let[t,r]=e,o=await n.gas.estimateGas([{to:t.to??null,value:t.value??"0x0",data:t.data??"0x0"}],t.from,{revision:r!==void 0?f(r):void 0});return await Promise.resolve("0x"+o.totalGas.toString(16))}catch(t){throw new JSONRPCInternalError("eth_estimateGas()",'Method "eth_estimateGas" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(t)})}};var yt=async()=>(VeChainSDKLogger("warning").log({title:"eth_feeHistory",messages:['Method "eth_feeHistory" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var Tt=async n=>{let{result:{plain:e}}=await n.contracts.getBaseGasPrice();return "0x"+BigInt(e).toString(16)};var bt=async(n,e)=>{if(e.length!==2||typeof e[0]!="string"||typeof e[1]!="object"&&typeof e[1]!="string")throw new JSONRPCInvalidParams("eth_getBalance",`Invalid input params for "eth_getBalance" method. See ${l} for details.`,{params:e});try{let[t,r]=e;return (await n.accounts.getAccount(Address.of(t),{revision:Revision.of(f(r))})).balance}catch(t){throw new JSONRPCInternalError("eth_getBalance()",'Method "eth_getBalance" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(t)})}};var Pt=async(n,e)=>{if(e.length!==1||typeof e[0]!="string")throw new JSONRPCInvalidParams("eth_getBlockReceipts",`Invalid input params for "eth_getBlockReceipts" method. See ${l} for details.`,{params:e});try{let[t]=e,r=await g(n,[t,!0]);if(r===null)return null;let o=r.transactions,i=[];for(let a of o){let c=await S(n,[a.hash]);i.push(c);}return i}catch(t){throw new JSONRPCInternalError("eth_getBlockReceipts()",'Method "eth_getBlockReceipts" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(t)})}};var wt=async(n,e)=>{if(e.length!==1||typeof e[0]!="string"||!ThorId.isValid(e[0]))throw new JSONRPCInvalidParams("eth_getBlockTransactionCountByHash",`Invalid input params for "eth_getBlockTransactionCountByHash" method. See ${l} for details.`,{params:e});let t=await E(n,[e[0],!1]);return t!==null?t.transactions.length:0};var Ct=async(n,e)=>{if(e.length!==1||typeof e[0]!="string")throw new JSONRPCInvalidParams("eth_getBlockTransactionCountByNumber",`Invalid input params for "eth_getBlockTransactionCountByNumber" method. See ${l} for details.`,{params:e});let t=await g(n,[e[0],!1]);return t!==null?t.transactions.length:0};var Et=async(n,e)=>{if(e.length!==2||typeof e[0]!="string"||typeof e[1]!="object"&&typeof e[1]!="string")throw new JSONRPCInvalidParams("eth_getCode",`Invalid input params for "eth_getCode" method. See ${l} for details.`,{params:e});try{let[t,r]=e;return (await n.accounts.getBytecode(Address.of(t),{revision:Revision.of(f(r))})).toString()}catch(t){throw new JSONRPCInternalError("eth_getCode()",'Method "eth_getCode" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(t)})}};var xt=async()=>(VeChainSDKLogger("warning").log({title:"eth_getFilterChanges",messages:['Method "eth_getFilterChanges" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var It=async()=>(VeChainSDKLogger("warning").log({title:"eth_getFilterLogs",messages:['Method "eth_getFilterLogs" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var le=async(n,e)=>{if(e.length!==1||typeof e[0]!="object")throw new JSONRPCInvalidParams("eth_getLogs",`Invalid input params for "eth_getLogs" method. See ${l} for details.`,{params:e});let t=1e3,[r]=e;try{let o=await n.blocks.getBestBlockCompressed(),i=$e({address:r.address!==null?r.address:void 0,topics:r.topics}),a=await n.logs.filterRawEventLogs({range:{unit:"block",from:r.fromBlock!==void 0?parseInt(r.fromBlock,16):o.number,to:r.toBlock!==void 0?parseInt(r.toBlock,16):o.number},criteriaSet:i,order:"asc",options:{offset:0,limit:t}});return Ke(a)}catch(o){throw new JSONRPCInternalError("eth_getLogs()",'Method "eth_getLogs" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(o)})}};var vt=async()=>(VeChainSDKLogger("warning").log({title:"eth_getProof",messages:['Method "eth_getProof" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var Rt=async(n,e)=>{if(e.length!==3||typeof e[0]!="string"||typeof e[1]!="string"||typeof e[2]!="object"&&typeof e[2]!="string")throw new JSONRPCInvalidParams("eth_getStorageAt",`Invalid input params for "eth_getStorageAt" method. See ${l} for details.`,{params:e});try{let[t,r,o]=e;return (await n.accounts.getStorageAt(Address.of(t),ThorId.of(r),{revision:Revision.of(f(o))})).toString()}catch(t){throw new JSONRPCInternalError("eth_getStorageAt()",'Method "eth_getStorageAt" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(t)})}};var D=async(n,e)=>{if(e.length!==1||typeof e[0]!="string")throw new JSONRPCInvalidParams("eth_getTransactionByHash",`Invalid input params for "eth_getTransactionByHash" method. See ${l} for details.`,{params:e});try{let[t]=e,r=await n.transactions.getTransaction(t);if(r===null)return null;let o=await g(n,[r.meta.blockID,!1]);if(o===null)return null;let i=R(o,t),a=await m(n);return A.formatToRPCStandard(r,a,i)}catch(t){throw new JSONRPCInternalError("eth_getTransactionByHash()",'Method "eth_getTransactionByHash" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(t)})}};var kt=async(n,e)=>{if(e.length!==2||typeof e[0]!="string"||typeof e[1]!="string")throw new JSONRPCInvalidParams("eth_getTransactionByBlockHashAndIndex",`Invalid input params for "eth_getTransactionByBlockHashAndIndex" method. See ${l} for details.`,{params:e});try{let[t,r]=e,o=await E(n,[t,!1]);for(let i of o.transactions){let a=await D(n,[i]);if(a.transactionIndex===r)return a}return null}catch(t){throw new JSONRPCInternalError("eth_getTransactionByBlockHashAndIndex()",'Method "eth_getTransactionByBlockHashAndIndex" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(t)})}};var Bt=async(n,e)=>{if(e.length!==2||typeof e[0]!="string"||typeof e[1]!="string")throw new JSONRPCInvalidParams("eth_getTransactionByBlockNumberAndIndex",`Invalid input params for "eth_getTransactionByBlockNumberAndIndex" method. See ${l} for details.`,{params:e});try{let[t,r]=e,o=await g(n,[t,!1]);for(let i of o.transactions){let a=await D(n,[i]);if(a.transactionIndex===r)return a}return null}catch(t){throw new JSONRPCInternalError("eth_getTransactionByBlockNumberAndIndex()",'Method "eth_getTransactionByBlockNumberAndIndex" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(t)})}};var Nt=async n=>{if(typeof n[0]!="string"||typeof n[1]!="object"&&typeof n[1]!="string")throw new JSONRPCInvalidParams("eth_getTransactionCount",`Invalid input params for "eth_getTransactionCount" method. See ${l} for details.`,{params:n});if(!Address.isValid(n[0]))throw new JSONRPCInvalidParams("eth_getTransactionCount","Invalid address, expected a 20 bytes address string.",{params:n});return await Promise.resolve(Hex.of(Secp256k1.randomBytes(6)).toString())};var _t=async n=>{if(n.length!==2||typeof n[0]!="string"||!ThorId.isValid(n[0])||typeof n[1]!="string")throw new JSONRPCInvalidParams("eth_getUncleByBlockHashAndIndex",'Invalid input params for "eth_getUncleByBlockHashAndIndex" method. See https://docs.infura.io/api/networks/ethereum/json-rpc-methods/eth_getunclebyblockhashandindex for details.',{params:n});return await Promise.resolve({})};var Ot=async n=>{if(n.length!==2||typeof n[0]!="string"||typeof n[1]!="string")throw new JSONRPCInvalidParams("eth_getUncleByBlockNumberAndIndex",'Invalid input params for "eth_getUncleByBlockNumberAndIndex" method. See https://docs.infura.io/api/networks/ethereum/json-rpc-methods/eth_getunclebyblocknumberandindex for details.',{params:n});return await Promise.resolve({})};var At=async n=>{if(n.length!==1||typeof n[0]!="string"||!ThorId.isValid(n[0]))throw new JSONRPCInvalidParams("eth_getUncleCountByBlockHash",`Invalid input params for "eth_getUncleCountByBlockHash" method. See ${l} for details.`,{params:n});return await Promise.resolve(0)};var St=async n=>{if(n.length!==1||typeof n[0]!="string")throw new JSONRPCInvalidParams("eth_getUncleCountByBlockNumber",`Invalid input params for "eth_getUncleCountByBlockNumber" method. See ${l} for details.`,{params:n});return await Promise.resolve(0)};var Mt=async()=>(VeChainSDKLogger("warning").log({title:"eth_getWork",messages:['Method "eth_getWork" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var Dt=async()=>(VeChainSDKLogger("warning").log({title:"eth_hashrate",messages:['Method "eth_hashrate" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var Lt=async()=>(VeChainSDKLogger("warning").log({title:"eth_maxPriorityFeePerGas",messages:['Method "eth_maxPriorityFeePerGas" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var Vt=async()=>(VeChainSDKLogger("warning").log({title:"eth_mining",messages:['Method "eth_mining" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var Ut=async()=>(VeChainSDKLogger("warning").log({title:"eth_newBlockFilter",messages:['Method "eth_newBlockFilter" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var Ft=async()=>(VeChainSDKLogger("warning").log({title:"eth_newFilter",messages:['Method "eth_newFilter" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var Ht=async()=>(VeChainSDKLogger("warning").log({title:"eth_newPendingTransactionFilter",messages:['Method "eth_newPendingTransactionFilter" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var Gt=async()=>(VeChainSDKLogger("warning").log({title:"eth_protocolVersion",messages:['Method "eth_protocolVersion" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var Kt=async n=>{let e=await ce(n);if(e.length===0)throw new JSONRPCInvalidParams("eth_requestAccounts()",'Method "eth_requestAccounts" failed.',{provider:stringifyData(n)});return e};var $t=async(n,e)=>{if(e.length!==1||typeof e[0]!="string")throw new JSONRPCInvalidParams("eth_sendRawTransaction()",`Invalid input params for "eth_sendRawTransaction" method. See ${l} for details.`,{params:e});if(!Hex.isValid0x(e[0]))throw new JSONRPCInvalidParams("eth_sendRawTransaction()","Invalid transaction encoded data given as input. Input must be a hex string.",{params:e});try{let[t]=e;return (await n.transactions.sendRawTransaction(t)).id}catch(t){throw new JSONRPCInternalError("eth_sendRawTransaction()",'Method "eth_sendRawTransaction" failed.',{params:stringifyData(e),url:n.httpClient.baseURL},t)}};var Jt=async(n,e,t)=>{if(e.length!==1||typeof e[0]!="object")throw new JSONRPCInvalidParams("eth_sendTransaction",`Invalid input params for "eth_sendTransaction" method. See ${l} for details.`,{params:e});if(t?.wallet===void 0)throw new JSONRPCInvalidParams("eth_sendTransaction","Provider must be defined with a wallet. Ensure that the provider is defined and connected to the network.",{provider:t});if(e[0].from===void 0)throw new JSONRPCInvalidParams("eth_sendTransaction","From field is required in the transaction object.",{provider:t});let[r]=e;try{return await(await t.getSigner(r.from)).sendTransaction(r)}catch(o){throw new JSONRPCInternalError("eth_sendTransaction()",'Method "eth_sendTransaction" failed.',{params:stringifyData(e),url:n.httpClient.baseURL},o)}};var Wt=async()=>(VeChainSDKLogger("warning").log({title:"eth_sign",messages:['Method "eth_sign" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var Qt=async(n,e,t)=>{if(e.length!==1||typeof e[0]!="object")throw new JSONRPCInvalidParams("eth_signTransaction",`Invalid input params for "eth_signTransaction" method. See ${l} for details.`,{params:e});if(t?.wallet===void 0)throw new JSONRPCInvalidParams("eth_signTransaction","Provider must be defined with a wallet. Ensure that the provider is defined and connected to the network.",{provider:t});if(e[0].from===void 0)throw new JSONRPCInvalidParams("eth_signTransaction","From field is required in the transaction object.",{provider:t});let[r]=e;try{return await(await t.getSigner(r.from)).signTransaction(r)}catch(o){throw new JSONRPCInternalError("eth_signTransaction()",'Method "eth_signTransaction" failed.',{params:stringifyData(e),url:n.httpClient.baseURL},o)}};var zt=async(n,e,t)=>{if(e.length!==2||typeof e[0]!="string"||!Address.isValid(e[0])||typeof e[1]!="object")throw new JSONRPCInvalidParams("eth_signTypedDataV4",'Invalid input params for "eth_signTypedDataV4" method. See https://docs.metamask.io/wallet/reference/eth_signtypeddata_v4/ for details.',{params:e});if(t?.wallet===void 0||await t.getSigner(e[0])===null)throw new JSONRPCInvalidParams("eth_signTypedDataV4",`Provider must be defined with a wallet. Ensure that the provider is defined, connected to the network and has the wallet with the address ${e[0]} into it.`,{provider:t});let[r,o]=e;try{return await(await t.getSigner(r)).signTypedData(o.domain,o.types,o.message)}catch(i){throw new JSONRPCInternalError("eth_signTypedDataV4",'Method "eth_signTypedDataV4" failed.',{params:stringifyData(e),url:n.httpClient.baseURL},i)}};var Yt=async()=>(VeChainSDKLogger("warning").log({title:"eth_submitWork",messages:['Method "eth_submitWork" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var Zt=async(n,e,t)=>{if(t===void 0)throw new JSONRPCInternalError("eth_subscribe()",'Method "eth_subscribe" failed. Provider is not defined.',{url:n.httpClient.baseURL,params:stringifyData(e)});if(e[0]!=="newHeads"&&e[0]!=="logs")throw new JSONRPCInvalidParams("eth_subscribe()",'Method "eth_subscribe" failed. Invalid subscription type param.',{url:n.httpClient.baseURL,params:stringifyData(e)});if(t.getPollInstance()===void 0){let o=await n.blocks.getBestBlockCompressed();if(o!=null)t.subscriptionManager.currentBlockNumber=o.number;else throw new JSONRPCServerError("eth_subscribe()",'Method "eth_subscribe" failed. Best block not available.',{url:n.httpClient.baseURL,params:stringifyData(e)});t.startSubscriptionsPolling();}let r=Hex.random(16).digits;return e.includes("newHeads")&&(t.subscriptionManager.newHeadsSubscription={subscriptionId:r,subscription:{type:"newHeads"}}),e.includes("logs")&&t.subscriptionManager.logSubscriptions.set(r,{type:"logs",options:e[1]}),r};var fs=n=>Math.floor(Date.now()/1e3)-n.timestamp<11e3,en=async n=>{try{let e=await n.blocks.getBestBlockCompressed(),t=await n.blocks.getGenesisBlock(),r=t!==null?HexInt.of(Math.floor((Date.now()-t.timestamp)/1e4)).toString():null;if(e!==null){if(fs(e))return !1;let o=await m(n);return {currentBlock:h.formatToRPCStandard(e,o),highestBlock:r,startingBlock:null}}return {currentBlock:null,highestBlock:r,startingBlock:null}}catch(e){throw new JSONRPCInternalError("eth_syncing()",'Method "eth_syncing" failed.',{url:n.httpClient.baseURL,innerError:stringifyData(e)})}};var tn=async()=>(VeChainSDKLogger("warning").log({title:"eth_uninstallFilter",messages:['Method "eth_uninstallFilter" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var nn=async(n,e)=>{let t=!1;if(e===void 0)throw new JSONRPCInternalError("eth_unsubscribe()",'Method "eth_unsubscribe" failed. Provider is not defined.',{params:stringifyData(n)});let r=n[0];return e.subscriptionManager.newHeadsSubscription!==void 0&&r===e.subscriptionManager.newHeadsSubscription.subscriptionId?(e.subscriptionManager.newHeadsSubscription=void 0,t=!0):t=e.subscriptionManager.logSubscriptions.delete(r),e.isThereActiveSubscriptions()||e.stopSubscriptionsPolling(),await Promise.resolve(t)};var rn=async n=>{try{let e=await n.blocks.getBestBlockExpanded(),t=e!==null?await n.blocks.waitForBlockCompressed(e.number+1):null,r=await m(n);return t!==null?h.formatToRPCStandard(t,r):null}catch(e){throw new JSONRPCInternalError("evm_mine()",'Method "evm_mine" failed.',{url:n.httpClient.baseURL,innerError:stringifyData(e)})}};var on=async n=>{try{return await n.nodes.isHealthy()}catch(e){throw new JSONRPCInternalError("net_listening()",'Method "net_listening" failed.',{url:n.httpClient.baseURL,innerError:stringifyData(e)})}};var an=async n=>{try{return (await n.nodes.getNodes()).length}catch(e){throw new JSONRPCInternalError("net_peerCount()",'Method "net_peerCount" failed.',{url:n.httpClient.baseURL,innerError:stringifyData(e)})}};var sn=async n=>await m(n);var cn=async()=>(VeChainSDKLogger("warning").log({title:"parity_nextNonce",messages:['Method "parity_nextNonce" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var ln=async()=>await Promise.resolve({});var dn=async n=>{if(n.length!==1||typeof n[0]!="string"||!Address.isValid(n[0]))throw new JSONRPCInvalidParams("txpool_contentFrom()",'Invalid input params for "txpool_contentFrom" method. See https://www.quicknode.com/docs/ethereum/txpool_contentFrom for details.',{params:n});return await Promise.resolve({})};var pn=async()=>await Promise.resolve({});var un=async()=>await Promise.resolve({});var mn=async()=>await Promise.resolve("thor");var gn=async n=>{if(n.length!==1||typeof n[0]!="string"||!Hex.isValid(n[0]))throw new JSONRPCInvalidParams("web3_sha3",`Invalid input params for "web3_sha3" method. See 'https://docs.alchemy.com/reference/web3-sha3' for details.`,{params:n});return await Promise.resolve(Keccak256.of(n[0]).toString())};var fn=(n,e)=>({eth_blockNumber:async()=>await ut(n),eth_chainId:async()=>await m(n),eth_getBalance:async t=>await bt(n,t),eth_getCode:async t=>await Et(n,t),eth_getStorageAt:async t=>await Rt(n,t),eth_estimateGas:async t=>await ht(n,t),eth_call:async t=>await mt(n,t),eth_sendRawTransaction:async t=>await $t(n,t),eth_getLogs:async t=>await le(n,t),eth_getBlockByHash:async t=>await E(n,t),eth_getBlockByNumber:async t=>await g(n,t),eth_accounts:async()=>await ce(e),eth_gasPrice:async()=>await Tt(n),eth_getTransactionByHash:async t=>await D(n,t),eth_getTransactionCount:async t=>await Nt(t),eth_getTransactionReceipt:async t=>await S(n,t),eth_sendTransaction:async t=>await Jt(n,t,e),eth_syncing:async()=>await en(n),net_version:async()=>await sn(n),web3_clientVersion:async()=>await mn(),eth_subscribe:async t=>await Zt(n,t,e),eth_unsubscribe:async t=>await nn(t,e),debug_traceTransaction:async t=>await M(n,t),debug_traceCall:async t=>await Xe(n,t),evm_mine:async()=>await rn(n),eth_coinbase:async()=>await gt(),eth_feeHistory:async()=>await yt(),eth_getBlockTransactionCountByHash:async t=>await wt(n,t),eth_getBlockTransactionCountByNumber:async t=>await Ct(n,t),eth_getTransactionByBlockHashAndIndex:async t=>await kt(n,t),eth_getTransactionByBlockNumberAndIndex:async t=>await Bt(n,t),eth_getUncleByBlockHashAndIndex:async t=>await _t(t),eth_getUncleByBlockNumberAndIndex:async t=>await Ot(t),eth_getUncleCountByBlockHash:async t=>await At(t),eth_getUncleCountByBlockNumber:async t=>await St(t),eth_getWork:async()=>await Mt(),eth_mining:async()=>await Vt(),eth_hashrate:async()=>await Dt(),eth_protocolVersion:async()=>await Gt(),eth_requestAccounts:async()=>await Kt(e),eth_sign:async()=>await Wt(),eth_submitWork:async()=>await Yt(),net_listening:async()=>await on(n),net_peerCount:async()=>await an(n),parity_nextNonce:async()=>await cn(),eth_newFilter:async()=>await Ft(),eth_newBlockFilter:async()=>await Ut(),eth_newPendingTransactionFilter:async()=>await Ht(),eth_getFilterLogs:async()=>await It(),eth_getFilterChanges:async()=>await xt(),eth_uninstallFilter:async()=>await tn(),debug_getBadBlocks:async()=>await qe(),debug_getRawBlock:async()=>await Je(),debug_getRawHeader:async()=>await We(),debug_getRawReceipts:async()=>await je(),debug_getRawTransaction:async()=>await Qe(),engine_exchangeCapabilities:async()=>await Ze(),engine_exchangeTransitionConfigurationV1:async()=>await et(),engine_forkchoiceUpdatedV1:async()=>await tt(),engine_forkchoiceUpdatedV2:async()=>await nt(),engine_forkchoiceUpdatedV3:async()=>await rt(),engine_getPayloadBodiesByHashV1:async()=>await ot(),engine_getPayloadBodiesByRangeV1:async()=>await it(),engine_getPayloadV1:async()=>await at(),engine_getPayloadV2:async()=>await st(),engine_getPayloadV3:async()=>await ct(),engine_newPayloadV1:async()=>await lt(),engine_newPayloadV2:async()=>await dt(),engine_newPayloadV3:async()=>await pt(),eth_createAccessList:async()=>await ft(),eth_getBlockReceipts:async t=>await Pt(n,t),eth_getProof:async()=>await vt(),eth_maxPriorityFeePerGas:async()=>await Lt(),eth_signTransaction:async t=>await Qt(n,t,e),web3_sha3:async t=>await gn(t),txpool_inspect:async()=>await pn(),txpool_content:async()=>await ln(),txpool_contentFrom:async t=>await dn(t),txpool_status:async()=>await un(),debug_traceBlockByHash:async t=>await ze(n,t),debug_traceBlockByNumber:async t=>await Ye(n,t),eth_signTypedData_v4:async t=>await zt(n,t,e)});var H=class extends EventEmitter{constructor(t,r,o=!1){super();this.thorClient=t;this.wallet=r;this.enableDelegation=o;}subscriptionManager={logSubscriptions:new Map,currentBlockNumber:0};pollInstance;destroy(){this.thorClient.destroy(),this.pollInstance!==void 0&&(this.pollInstance.stopListen(),this.pollInstance=void 0);}async request(t){if(!Object.values(B).map(r=>r.toString()).includes(t.method))throw new JSONRPCMethodNotFound("VeChainProvider.request()","Method not found. Invalid RPC method given as input.",{method:t.method});return await fn(this.thorClient,this)[t.method](t.params)}startSubscriptionsPolling(){let t=!1;return this.pollInstance===void 0&&(this.pollInstance=x.createEventPoll(async()=>{let r=[],o=await this.getCurrentBlock();if(o!==null){if(this.subscriptionManager.newHeadsSubscription!==void 0&&r.push({method:"eth_subscription",params:{subscription:this.subscriptionManager.newHeadsSubscription.subscriptionId,result:o}}),this.subscriptionManager.logSubscriptions.size>0){let i=await this.getLogsRPC();r.push(...i);}this.subscriptionManager.currentBlockNumber++;}return r},5e3).onData(r=>{r.forEach(o=>{this.emit("message",o);});}),this.pollInstance.startListen(),t=!0),t}stopSubscriptionsPolling(){let t=!1;return this.pollInstance!==void 0&&(this.pollInstance.stopListen(),this.pollInstance=void 0,t=!0),t}isThereActiveSubscriptions(){return this.subscriptionManager.logSubscriptions.size>0||this.subscriptionManager.newHeadsSubscription!==void 0}getPollInstance(){return this.pollInstance}async getLogsRPC(){let t=Array.from(this.subscriptionManager.logSubscriptions.entries()).map(async([o,i])=>{let a=HexInt.of(this.subscriptionManager.currentBlockNumber).toString(),c={address:i.options?.address,fromBlock:a,toBlock:a,topics:i.options?.topics};return {method:"eth_subscription",params:{subscription:o,result:await le(this.thorClient,[c])}}});return (await Promise.all(t)).filter(o=>o.params.result.length>0)}async getCurrentBlock(){let t=null;if(this.isThereActiveSubscriptions()){let r=await this.thorClient.blocks.getBlockCompressed(this.subscriptionManager.currentBlockNumber);r!=null&&(t=r);}return t}async getSigner(t){return this.wallet===void 0?null:await this.wallet?.getSigner(this,t)}async resolveName(t){return await P.resolveName(this.thorClient,t)}async lookupAddress(t){return await P.lookupAddress(this.thorClient,t)}};var yn=class extends H{debug;buildHardhatErrorFunctionCallback;rpcConfiguration;constructor(e,t,r,o=!1,i=!1,a={ethGetTransactionCountMustReturn0:!1}){super(new te(new k(t)),e,i),this.debug=o,this.rpcConfiguration=a,this.buildHardhatErrorFunctionCallback=r;}async send(e,t){return await this.request({method:e,params:t})}async sendAsync(e,t){try{let r=await this.request({method:e.method,params:e.params});t(null,{id:e.id,jsonrpc:"2.0",result:r});}catch(r){t(r,{id:e.id,jsonrpc:"2.0"});}}async request(e){let t=this.rpcConfiguration.ethGetTransactionCountMustReturn0&&e.method==="eth_getTransactionCount";try{if(this.debug){let o=await this.wallet.getAddresses(),i=await this.wallet.getDelegator();VeChainSDKLogger("log").log({title:`Sending request - ${e.method}`,messages:[`params: ${stringifyData(e.params)}`,`accounts: ${stringifyData(o)}`,`delegator: ${stringifyData(i)}`,`url: ${this.thorClient.httpClient.baseURL}`]});}let r=t?"0x0":await super.request({method:e.method,params:e.params});return this.debug&&VeChainSDKLogger("log").log({title:`Get request - ${e.method} result`,messages:[`result: ${stringifyData(r)}`]}),r}catch(r){if(this.debug&&VeChainSDKLogger("error").log(new JSONRPCInternalError(e.method,`Error on request - ${e.method}`,{args:e})),r instanceof VechainSDKError)throw this.buildHardhatErrorFunctionCallback(`Error on request ${e.method}: ${r.innerError}`,r)}}};

export { K as AccountDetail, q as AccountsModule, de as BUILT_IN_CONTRACTS, J as BlocksModule, Pe as CHAIN_ID, v as Contract, L as ContractFactory, Q as ContractsModule, z as DebugModule, V as DelegationHandler, ue as ERROR_SELECTOR, Y as GasModule, Ie as HTTPS_REGEX, pe as HTTP_REGEX, yn as HardhatVeChainProvider, C as HttpMethod, Ue as JSONRPCEthersProvider, X as LogsModule, Wr as MAINNET_URL, ve as NODE_HEALTHCHECK_TOLERANCE_IN_SECONDS, Z as NodesModule, me as PANIC_SELECTOR, Fe as POLLING_INTERVAL, x as Poll, ie as ProviderInternalBaseWallet, Ve as ProviderInternalHDWallet, fn as RPCMethodsMap, l as RPC_DOCUMENTATION_URL, B as RPC_METHODS, k as SimpleHttpClient, jr as TESTNET_URL, zr as THOR_SOLO_ACCOUNTS, Qr as THOR_SOLO_URL, te as ThorClient, ee as TransactionsModule, re as VeChainAbstractSigner, oe as VeChainPrivateKeySigner, H as VeChainProvider, h as blocksFormatter, y as buildQuery, se as debugFormatter, qe as debugGetBadBlocks, Je as debugGetRawBlock, We as debugGetRawHeader, je as debugGetRawReceipts, Qe as debugGetRawTransaction, ze as debugTraceBlockByHash, Ye as debugTraceBlockByNumber, Xe as debugTraceCall, M as debugTraceTransaction, Ze as engineExchangeCapabilities, et as engineExchangeTransitionConfigurationV1, tt as engineForkchoiceUpdatedV1, nt as engineForkchoiceUpdatedV2, rt as engineForkchoiceUpdatedV3, ot as engineGetPayloadBodiesByHashV1, it as engineGetPayloadBodiesByRangeV1, at as engineGetPayloadV1, st as engineGetPayloadV2, ct as engineGetPayloadV3, lt as engineNewPayloadV1, dt as engineNewPayloadV2, pt as engineNewPayloadV3, ce as ethAccounts, ut as ethBlockNumber, mt as ethCall, m as ethChainId, gt as ethCoinbase, ft as ethCreateAccessList, ht as ethEstimateGas, yt as ethFeeHistory, Tt as ethGasPrice, bt as ethGetBalance, E as ethGetBlockByHash, g as ethGetBlockByNumber, Pt as ethGetBlockReceipts, wt as ethGetBlockTransactionCountByHash, Ct as ethGetBlockTransactionCountByNumber, Et as ethGetCode, xt as ethGetFilterChanges, It as ethGetFilterLogs, le as ethGetLogs, vt as ethGetProof, Rt as ethGetStorageAt, kt as ethGetTransactionByBlockHashAndIndex, Bt as ethGetTransactionByBlockNumberAndIndex, D as ethGetTransactionByHash, Nt as ethGetTransactionCount, S as ethGetTransactionReceipt, _t as ethGetUncleByBlockHashAndIndex, Ot as ethGetUncleByBlockNumberAndIndex, At as ethGetUncleCountByBlockHash, St as ethGetUncleCountByBlockNumber, Mt as ethGetWork, Dt as ethHashrate, Lt as ethMaxPriorityFeePerGas, Vt as ethMining, Ut as ethNewBlockFilter, Ft as ethNewFilter, Ht as ethNewPendingTransactionFilter, Gt as ethProtocolVersion, Kt as ethRequestAccounts, $t as ethSendRawTransaction, Jt as ethSendTransaction, Wt as ethSign, Qt as ethSignTransaction, zt as ethSignTypedDataV4, Yt as ethSubmitWork, Zt as ethSubscribe, en as ethSyncing, tn as ethUninstallFilter, nn as ethUnsubscribe, rn as evmMine, Ke as formatToLogsRPC, Ge as formatToRPCStandard, f as getCorrectBlockNumberRPCToVeChain, $e as getCriteriaSetForInput, He as getNumberOfLogsAheadOfTransactionIntoBlockExpanded, R as getTransactionIndexIntoBlock, on as netListening, an as netPeerCount, sn as netVersion, Lr as network, cn as parityNextNonce, I as sanitizeWebsocketBaseURL, xe as signerUtils, ro as subscriptions, p as thorest, N as toQueryString, A as transactionsFormatter, ln as txPoolContent, dn as txPoolContentFrom, pn as txPoolInspect, un as txPoolStatus, P as vnsUtils, mn as web3ClientVersion, gn as web3Sha3 };
