import{useCallback as h,useEffect as v,useMemo as M,useState as d}from"react";import{DAppKitUI as y}from"@vechain/dapp-kit-ui";import{subscribeKey as x}from"valtio/vanilla/utils";import{createContext as B}from"react";var p=B(void 0);import{jsx as S}from"react/jsx-runtime";var N=({children:e,connex:t})=>{let[n,o]=d(t.wallet.state.address),[r,i]=d(t.wallet.state.accountDomain),[u,a]=d(t.wallet.state.isAccountDomainLoading),[c,m]=d(t.wallet.state.source),[s,D]=d(t.wallet.state.connectionCertificate);v(()=>{let K=x(t.wallet.state,"address",l=>{o(l)}),P=x(t.wallet.state,"accountDomain",l=>{i(l)}),V=x(t.wallet.state,"isAccountDomainLoading",l=>{a(l)}),T=x(t.wallet.state,"source",l=>{m(l)}),W=x(t.wallet.state,"connectionCertificate",l=>{D(l)});return()=>{K(),P(),V(),T(),W()}},[t.wallet.state]);let C=h(()=>{y.modal.open()},[]),g=h(()=>{y.modal.close()},[]),A=h(K=>y.modal.onConnectionStatusChange(K),[]),w=M(()=>({connex:{thor:t.thor,vendor:t.vendor},wallet:{setSource:t.wallet.setSource,disconnect:t.wallet.disconnect,connect:t.wallet.connect,availableWallets:t.wallet.state.availableSources,account:n,accountDomain:r,isAccountDomainLoading:u,source:c,connectionCertificate:s,signTypedData:t.wallet.signTypedData},modal:{open:C,close:g,onConnectionStatusChange:A}}),[t,n,r,u,c,s,C,g,A]);return S(p.Provider,{value:w,children:e})},ot=({children:e,nodeUrl:t,genesis:n,walletConnectOptions:o,usePersistence:r=!1,logLevel:i,requireCertificate:u,themeMode:a,themeVariables:c,i18n:m,language:s,modalParent:D,onSourceClick:C,connectionCertificate:g})=>{let[A,w]=d(null);return v(()=>{w(y.configure({nodeUrl:t,genesis:n,walletConnectOptions:o,usePersistence:r,logLevel:i,requireCertificate:u,themeVariables:c,themeMode:a,i18n:m,language:s,modalParent:D,onSourceClick:C,connectionCertificate:g}))},[t,n,o,r,i,u,c,a,m,s,D,C,g]),A?S(N,{connex:A,children:e}):null};import{useContext as I}from"react";var E=()=>{let e=I(p);if(!e)throw new Error('"useConnex" must be used within a ConnexProvider');return e.connex};import{useContext as k}from"react";var pt=()=>{let e=k(p);if(!e)throw new Error('"useWallet" must be used within a ConnexProvider');return e.wallet};import{useContext as F}from"react";var ft=()=>{let e=F(p);if(!e)throw new Error('"useWalletModal" must be used within a ConnexProvider');return e.modal};import U from"react";import{Button as _}from"@vechain/dapp-kit-ui";import{createComponent as z}from"@lit/react";var Dt=z({tagName:"vdk-button",elementClass:_,react:U});import{useEffect as X,useState as b}from"react";import{addressUtils as Y}from"@vechain/sdk-core";import{genesisBlocks as G}from"@vechain/dapp-kit";var f={main:"0xA11413086e163e41901bb81fdc5617c975Fa5a1A",test:"0xc403b8EA53F707d7d4de095f0A20bC491Cf2bc94"};var H={inputs:[{internalType:"address[]",name:"addresses",type:"address[]"}],name:"getNames",outputs:[{internalType:"string[]",name:"names",type:"string[]"}],stateMutability:"view",type:"function"},R=async({address:e,connex:t})=>{if(!e)return null;let n=t.thor.genesis.id===G.test.id?f.test:f.main,o=await t.thor.account(n).method(H).call([e]),{decoded:{names:r}}=o;return r?.[0]||null};import{genesisBlocks as J}from"@vechain/dapp-kit";var Q={inputs:[{internalType:"string[]",name:"names",type:"string[]"}],name:"getAddresses",outputs:[{internalType:"address[]",name:"addresses",type:"address[]"}],stateMutability:"view",type:"function"},L=async({domain:e,connex:t})=>{if(!e)return null;let n=t.thor.genesis.id===J.test.id?f.test:f.main,o=await t.thor.account(n).method(Q).call([e]),{decoded:{addresses:r}}=o;return r?.[0]||null};var Wt=({addressOrDomain:e})=>{let t=E(),[n,o]=b(null),[r,i]=b(null),[u,a]=b(!1),c=!e,m=!c&&Y.isAddress(e);return X(()=>{if(c){o(null),i(null),a(!1);return}if(m){o(e),a(!0),R({address:e,connex:t}).then(i).catch(s=>{console.error("Error getting domain: ",s),i(null)}).finally(()=>{a(!1)});return}a(!0),L({domain:e,connex:t}).then(s=>{i(e),o(s)}).catch(s=>{console.error("Error getting address: ",s),o(null),i(null)}).finally(()=>{a(!1)})},[e,t]),{address:n,domain:r,isLoading:u}};export{ot as DAppKitProvider,N as DAppKitProviderData,Dt as WalletButton,E as useConnex,Wt as useVechainDomain,pt as useWallet,ft as useWalletModal};
//# sourceMappingURL=index.js.map